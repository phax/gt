const gtuint8 EXT_EXE_001 [] = {
  0x33, 0xF6, 0x33, 0xFF, 0x2E, 0x8B, 0x16, 0xFC, 0x01, 0xFC, 0xAC, 0x32, 0xC2, 0xAA,
  0x02, 0xD6, 0xE2, 0xF8, 0x1E, 0x33, 0xC0, 0x8E, 0xD8, 0xFF, 0x36, 0x00, 0x00, 0xFF,
  0x36, 0x02, 0x00, 0x8C, 0x0E, 0x02, 0x00, 0xC7, 0x06, 0x00, 0x00, 0x2F, 0x02, 0xF6,
  0xF1, 0x83, 0xC4, 0x06, 0x8F, 0x06, 0x02, 0x00, 0x8F, 0x06, 0x00, 0x00, 0x1F, 0xFA,
  0x8B, 0xD4, 0xBC, 0x03, 0x00, 0x8B, 0xE2, 0xFB, 0x06, 0x1E, 0x56, 0x57, 0x33, 0xFF,
  0x8E, 0xC7, 0xBF, 0x84, 0x00, 0x26, 0x8E, 0x5D, 0x02, 0xBE };

const gtuint8 EXT_EXE_002 [] = {
  0xEC, 0x83, 0xC4, 0x28, 0x4C, 0x87, 0xEC, 0xB0, 0xAD, 0xE6, 0x64, 0xBB, 0xFF, 0x00,
  0x8D, 0x86, 0x28, 0x00, 0x43, 0x53, 0x89, 0x47, 0x02, 0x80, 0x37, 0x03, 0xC3, 0x62,
  0x60, 0x57, 0x51, 0xE8, 0x02, 0x00, 0xEB, 0x1A, 0xE8, 0x02, 0x00, 0x21, 0x17, 0x5F,
  0xB9, 0xBF, 0x00, 0xB8, 0x21, 0x17, 0x2E, 0x87, 0x05, 0x2E, 0x31, 0x85, 0x17, 0x00,
  0x47, 0xD1, 0xC8, 0xE2, 0xF6, 0xC3, 0x78, 0xD8, 0xA8, 0xA3, 0x11, 0x22, 0x04, 0xFF,
  0x07, 0x26, 0x07, 0x10, 0xA5, 0xC2, 0xD6, 0x1A, 0x57, 0x6C };

const gtuint8 EXT_EXE_003 [] = {
  0xEC, 0x83, 0xC4, 0x28, 0x4C, 0x87, 0xEC, 0xB0, 0xAD, 0xE6, 0x64, 0xBB, 0xFF, 0x00,
  0x8D, 0x86, 0x28, 0x00, 0x43, 0x53, 0x89, 0x47, 0x02, 0x80, 0x37, 0x03, 0xC3, 0x62,
  0x57, 0x51, 0xE8, 0x02, 0x00, 0xEB, 0x1A, 0xE8, 0x02, 0x00, 0xAC, 0x12, 0x5F, 0xB9,
  0x26, 0x00, 0xB8, 0xAC, 0x12, 0x2E, 0x87, 0x05, 0x2E, 0x31, 0x85, 0x17, 0x00, 0x47,
  0xD1, 0xC8, 0xE2, 0xF6, 0xC3, 0xF5, 0x1B, 0xBC, 0x7F, 0x57, 0x62, 0x2B, 0x94, 0xF0,
  0xB8, 0x5E, 0x07, 0x1D, 0x5C, 0x24, 0x13, 0x3D, 0x74, 0x6F };

const gtuint8 EXT_EXE_004 [] = {
  0x87, 0xEC, 0x83, 0xC4, 0x28, 0x4C, 0x87, 0xEC, 0xB0, 0xAD, 0xE6, 0x64, 0xBB, 0xFF,
  0x00, 0x8D, 0x86, 0x29, 0x00, 0x43, 0x53, 0x89, 0x47, 0x02, 0x80, 0x37, 0x03, 0xC3,
  0x62, 0x60, 0x57, 0x51, 0xE8, 0x02, 0x00, 0xEB, 0x1A, 0xE8, 0x02, 0x00, 0xC1, 0x0F,
  0x5F, 0xB9, 0xED, 0x00, 0xB8, 0xC1, 0x0F, 0x2E, 0x87, 0x05, 0x2E, 0x31, 0x85, 0x17,
  0x00, 0x47, 0xD1, 0xC8, 0xE2, 0xF6, 0xC3, 0x98, 0xB0, 0x71, 0xEB, 0xF6, 0xAE, 0xB9,
  0xDB, 0x77, 0xC3, 0xA5, 0x37, 0x08, 0x4C, 0x91, 0xBE, 0x35 };

const gtuint8 EXT_EXE_005 [] = {
  0x87, 0xEC, 0x83, 0xC4, 0x28, 0x4C, 0x87, 0xEC, 0xB0, 0xAD, 0xE6, 0x64, 0xBB, 0xFF,
  0x00, 0x8D, 0x86, 0x29, 0x00, 0x43, 0x53, 0x89, 0x47, 0x02, 0x80, 0x37, 0x03, 0xC3,
  0x62, 0x57, 0x51, 0xE8, 0x02, 0x00, 0xEB, 0x1A, 0xE8, 0x02, 0x00, 0x07, 0x0C, 0x5F,
  0xB9, 0x26, 0x00, 0xB8, 0x07, 0x0C, 0x2E, 0x87, 0x05, 0x2E, 0x31, 0x85, 0x17, 0x00,
  0x47, 0xD1, 0xC8, 0xE2, 0xF6, 0xC3, 0x5E, 0x50, 0x99, 0x6D, 0xDE, 0x26, 0x09, 0x05,
  0xB8, 0xD3, 0xC4, 0xCE, 0x79, 0xEE, 0x7D, 0x3F, 0xAB, 0x3F };

const gtuint8 EXT_EXE_006 [] = {
  0x87, 0xEC, 0x83, 0xC4, 0x28, 0x4C, 0x87, 0xEC, 0xB0, 0xAD, 0xE6, 0x64, 0xBB, 0xFF,
  0x00, 0x8D, 0x86, 0x29, 0x00, 0x43, 0x53, 0x89, 0x47, 0x02, 0x80, 0x37, 0x03, 0xC3,
  0x62, 0x60, 0x57, 0x51, 0xE8, 0x02, 0x00, 0xEB, 0x1A, 0xE8, 0x02, 0x00, 0xBE, 0x0F,
  0x5F, 0xB9, 0xED, 0x00, 0xB8, 0xBE, 0x0F, 0x2E, 0x87, 0x05, 0x2E, 0x31, 0x85, 0x17,
  0x00, 0x47, 0xD1, 0xC8, 0xE2, 0xF6, 0xC3, 0xE7, 0x8F, 0xEE, 0x24, 0x11, 0x5D, 0x40,
  0x27, 0x89, 0x3C, 0x5A, 0xCD, 0xF7, 0xB3, 0x6E, 0x41, 0x4A };

const gtuint8 EXT_EXE_007 [] = {
  0x87, 0xEC, 0x83, 0xC4, 0x28, 0x4C, 0x87, 0xEC, 0xB0, 0xAD, 0xE6, 0x64, 0xBB, 0xFF,
  0x00, 0x8D, 0x86, 0x29, 0x00, 0x43, 0x53, 0x89, 0x47, 0x02, 0x80, 0x37, 0x03, 0xC3,
  0x62, 0x57, 0x51, 0xE8, 0x02, 0x00, 0xEB, 0x1A, 0xE8, 0x02, 0x00, 0x04, 0x0C, 0x5F,
  0xB9, 0x26, 0x00, 0xB8, 0x04, 0x0C, 0x2E, 0x87, 0x05, 0x2E, 0x31, 0x85, 0x17, 0x00,
  0x47, 0xD1, 0xC8, 0xE2, 0xF6, 0xC3, 0x5D, 0x51, 0x19, 0xAD, 0xBE, 0x16, 0x11, 0x09,
  0xBE, 0x4D, 0x05, 0xAE, 0x49, 0xF6, 0x71, 0x39, 0xA8, 0x3E };

const gtuint8 EXT_EXE_008 [] = {
  0x5D, 0x83, 0xED, 0x04, 0x55, 0xD9, 0xD0, 0x9C, 0x58, 0x25, 0xFF, 0xFE, 0x50, 0x9D,
  0x50, 0x57, 0xBF, 0x70, 0x00, 0xB0, 0x01, 0xAA, 0x5F, 0x58, 0x66, 0x51, 0x66, 0xB9,
  0x00, 0x01, 0x00, 0x00, 0xCC, 0x66, 0x50, 0x66, 0x2E, 0xA1, 0x00, 0x01, 0x66, 0x50,
  0xBF, 0x00, 0x01, 0xB0, 0xC3, 0x88, 0x05, 0x57, 0xFF, 0xD7, 0xE2, 0xFC, 0xCC, 0x5F,
  0x66, 0x58, 0x66, 0x89, 0x05, 0x66, 0x58, 0x66, 0x59, 0x53, 0xBB, 0xEB, 0x04, 0x5B,
  0xEB, 0xFB, 0x9A, 0x1E, 0x33, 0xC0, 0x8E, 0xD8, 0xC7, 0x06 };

const gtuint8 EXT_EXE_009 [] = {
  0x5B, 0x81, 0xEB, 0xB2, 0x01, 0x1E, 0x06, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56,
  0x57, 0x06, 0x1E, 0x8B, 0xEB, 0xB4, 0x30, 0xCD, 0x21, 0x86, 0xE0, 0x3D, 0x00, 0x03,
  0x73, 0x03, 0xE9, 0xE9, 0x01, 0xE8, 0x4F, 0x02, 0x0B, 0xC0, 0x74, 0x03, 0xE8, 0xA1,
  0x01, 0x26, 0x8E, 0x06, 0x2C, 0x00, 0x33, 0xFF, 0x8B, 0xC7, 0xFC, 0x2E, 0x88, 0x86,
  0x1E, 0x05, 0x47, 0x26, 0x39, 0x05, 0x75, 0xFA, 0x83, 0xC7, 0x04, 0x2E, 0x89, 0xBE,
  0x1A, 0x05, 0x2E, 0x8C, 0x86, 0x1C, 0x05, 0x8B, 0xD7, 0x8C };

const gtuint8 EXT_EXE_010 [] = {
  0x5D, 0x81, 0xED, 0x5D, 0x02, 0xEB, 0x01, 0x66, 0xBF, 0x00, 0x01, 0xEB, 0x01, 0xEA,
  0xB0, 0xAD, 0xEB, 0x01, 0xFF, 0xE6, 0x64, 0xEB, 0x01, 0xD5, 0xB0, 0xC3, 0xEB, 0x01,
  0x9A, 0xAA, 0xEB, 0x01, 0xD5, 0x4F, 0x8D, 0x9E, 0x91, 0x02, 0xEB, 0x01, 0x66, 0x53,
  0x8B, 0xDF, 0xEB, 0x01, 0xEA, 0x53, 0xEB, 0x01, 0x9A, 0xC3, 0xEB, 0x01, 0x66, 0xEB,
  0x01, 0x9A, 0xEB, 0x01, 0xEA, 0xB8, 0x40, 0x00, 0xEB, 0x01, 0x66, 0x8E, 0xD8, 0xEB,
  0x01, 0xEA, 0xA1, 0x6C, 0x00, 0xEB, 0x01, 0x9A, 0x3B, 0x06 };

const gtuint8 EXT_EXE_011 [] = {
  0x50, 0x1E, 0x33, 0xC0, 0x8E, 0xD8, 0xA1, 0x04, 0x00, 0x8B, 0x1E, 0x06, 0x00, 0x3B,
  0x06, 0x0C, 0x00, 0x75, 0x09, 0x3B, 0x06, 0x0E, 0x00, 0x74, 0x03, 0xEB, 0x06, 0x90,
  0x1F, 0x58, 0xE8, 0x03, 0x00, 0x1F, 0x58, 0xC3, 0xBE, 0x03, 0x01, 0x2E, 0x8B, 0x0E,
  0x3F, 0x02, 0x8B, 0xEC, 0x8B, 0x46, 0x00, 0x31, 0x04, 0x46, 0x46, 0xE2, 0xF7, 0xC3,
  0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x6C, 0x6F, 0x70, 0x72, 0x6F, 0x01, 0x02, 0x22 };

const gtuint8 EXT_EXE_012 [] = {
  0x59, 0x8B, 0xE9, 0x81, 0xED, 0x6A, 0x01, 0x81, 0xE9, 0x03, 0x01, 0xBE, 0x00, 0x01,
  0x8D, 0xBE, 0xA3, 0x01, 0x66, 0x8B, 0x05, 0x66, 0x89, 0x04, 0x8D, 0xBE, 0xA7, 0x01,
  0x8B, 0xD7, 0x8B, 0xDF, 0x83, 0xC3, 0x1F, 0x8A, 0x04, 0x32, 0x05, 0xF6, 0xD0, 0x88,
  0x04, 0x47, 0x46, 0x3B, 0xFB, 0x76, 0x02, 0x8B, 0xFA, 0xE2, 0xEE, 0x68, 0x00, 0x01,
  0xC3, 0x00, 0x00, 0x00, 0x00, 0x29, 0x20, 0x3F, 0x5E, 0x4B, 0x22, 0x2F, 0x12, 0x4F,
  0x55, 0x35, 0x1A, 0x0C, 0x52, 0x18, 0x0C, 0x40, 0x18, 0x41 };

const gtuint8 EXT_EXE_013 [] = {
  0x55, 0xE8, 0x00, 0x00, 0x59, 0x8B, 0xE9, 0x81, 0xED, 0x00, 0x02, 0x66, 0x60, 0x8D,
  0x9E, 0x00, 0x02, 0x8D, 0x8E, 0x00, 0x00, 0x2B, 0xCB, 0x2E, 0x8A, 0x07, 0x34, 0x00,
  0x34, 0x00, 0x34, 0x00, 0xFE, 0xC0, 0xF6, 0xD0, 0x2E, 0x88, 0x07, 0x43, 0xE2, 0xED,
  0x66, 0x61, 0x5D };

const gtuint8 EXT_EXE_014 [] = {
  0xFA, 0x06, 0x57, 0x33, 0xFF, 0x57, 0x07, 0x8D, 0x76, 0x07, 0xB9, 0x0F, 0x00, 0x80,
  0x04, 0x00, 0x46, 0xE2, 0xFA, 0xB1, 0x00, 0xAC, 0x26, 0x8A, 0x1D, 0x04, 0x00, 0xAA,
  0x80, 0xEB, 0x00, 0x88, 0x5C, 0xFF, 0xE2, 0xF1, 0x5F, 0xFB, 0x07, 0xC3 };

const gtuint8 EXT_EXE_015 [] = {
  0x25, 0x30, 0x30, 0x25, 0x40, 0x40, 0x50, 0x5A, 0x2D, 0x4F, 0x6E, 0x2D, 0x4F, 0x6E,
  0x50, 0x59, 0x2D, 0x4F, 0x21, 0x50, 0x5F, 0x52, 0x5E, 0x21, 0x35, 0x51, 0x58, 0x2D,
  0x77, 0x50, 0x50, 0x5E, 0x31, 0x35, 0x51, 0x58, 0x2D, 0x62, 0x21, 0x50, 0x50, 0x5F,
  0x52, 0x5E, 0x21, 0x35, 0x47, 0x47, 0x21, 0x35, 0x47, 0x47, 0x21, 0x35, 0x47, 0x47,
  0x3D, 0x0D, 0x0A, 0x21, 0x35, 0x47, 0x47, 0x21, 0x35, 0x5F, 0x52, 0x58, 0x2D, 0x60,
  0x4B, 0x35, 0x70, 0x50, 0x50, 0x5E, 0x31, 0x35, 0x47, 0x47 };

const gtuint8 EXT_EXE_016 [] = {
  0xBA, 0x14, 0x01, 0xB4, 0x09, 0xCD, 0x21, 0xCD, 0x20, 0xB4, 0x30, 0xCD, 0x21, 0x3C,
  0x02, 0x77, 0x02, 0xCD, 0x20, 0xBD, 0x4A, 0x01, 0xFF, 0xE5, 0xFA, 0x66, 0x33, 0xC0,
  0x0F, 0x23, 0xF8, 0x0F, 0x23, 0xC0, 0x0F, 0x23, 0xC8, 0x0F, 0x23, 0xD0, 0x0F, 0x23,
  0xD8, 0xBC, 0x03, 0x00, 0x81, 0xC4, 0x36, 0x08, 0x8B, 0xF4, 0x83, 0xEE, 0x02, 0x33,
  0xDB, 0xFD, 0xAD, 0x80, 0xF4, 0x00, 0xC0, 0xC8, 0x02, 0x83, 0xC3, 0x13, 0x33, 0xC3,
  0x50, 0x81, 0xFE, 0x82, 0x01, 0x76, 0x03, 0xEB, 0xEB, 0x00 };

const gtuint8 EXT_EXE_017 [] = {
  0xBA, 0x14, 0x01, 0xB4, 0x09, 0xCD, 0x21, 0xCD, 0x20, 0xB4, 0x30, 0xCD, 0x21, 0x3C,
  0x02, 0x77, 0x02, 0xCD, 0x20, 0xBD, 0x4A, 0x01, 0xFF, 0xE5, 0xFA, 0x66, 0x33, 0xC0,
  0x0F, 0x23, 0xF8, 0x0F, 0x23, 0xC0, 0x0F, 0x23, 0xC8, 0x0F, 0x23, 0xD0, 0x0F, 0x23,
  0xD8, 0xBC, 0x03, 0x00, 0x81, 0xC4, 0x9D, 0x08, 0x8B, 0xF4, 0x83, 0xEE, 0x02, 0x33,
  0xDB, 0xFD, 0xAD, 0x80, 0xF4, 0x00, 0xC0, 0xC8, 0x02, 0x83, 0xC3, 0x13, 0x33, 0xC3,
  0x50, 0x81, 0xFE, 0x82, 0x01, 0x76, 0x03, 0xEB, 0xEB, 0x00 };

const gtuint8 EXT_EXE_018 [] = {
  0xBA, 0x14, 0x01, 0xB4, 0x09, 0xCD, 0x21, 0xCD, 0x20, 0xB4, 0x30, 0xCD, 0x21, 0x3C,
  0x02, 0x77, 0x02, 0xCD, 0x20, 0xBD, 0x4A, 0x01, 0xFF, 0xE5, 0xFA, 0x66, 0x33, 0xC0,
  0x0F, 0x23, 0xF8, 0x0F, 0x23, 0xC0, 0x0F, 0x23, 0xC8, 0x0F, 0x23, 0xD0, 0x0F, 0x23,
  0xD8, 0xBC, 0x03, 0x00, 0x81, 0xC4, 0xAD, 0x08, 0x8B, 0xF4, 0x83, 0xEE, 0x02, 0x33,
  0xDB, 0xFD, 0xAD, 0x80, 0xF4, 0x00, 0xC0, 0xC8, 0x02, 0x83, 0xC3, 0x13, 0x33, 0xC3,
  0x50, 0x81, 0xFE, 0x82, 0x01, 0x76, 0x03, 0xEB, 0xEB, 0x00 };

const gtuint8 EXT_EXE_019 [] = {
  0x1E, 0x6A, 0x00, 0x1F, 0x81, 0x36, 0x05, 0x00, 0x97, 0x87, 0x81, 0x36, 0x0D, 0x00,
  0x97, 0x87, 0x8B, 0x1E, 0x84, 0x00, 0xA1, 0x86, 0x00, 0x50, 0x1F, 0x81, 0x3F, 0x90,
  0x90, 0x75, 0x0E, 0x90, 0x90, 0x1F, 0xC7, 0x06, 0x00, 0x01, 0xCD, 0x20, 0xBE, 0x00,
  0x01, 0xFF, 0xE6, 0x1F, 0x83, 0xC5, 0x04, 0x83, 0x06, 0x1C, 0x01, 0x43, 0xC7, 0x06,
  0x00, 0x01, 0xEB, 0x19, 0xB8, 0x00, 0x01, 0x50, 0x50, 0xFF, 0xE0, 0x5B, 0x5F, 0x90,
  0xBB, 0x00, 0x00, 0x81, 0xF3, 0xF0, 0x99, 0x8B, 0x4D, 0x1C };

const gtuint8 EXT_EXE_020 [] = {
  0x6A, 0x00, 0x1F, 0xE8, 0x01, 0x00, 0xEA, 0x8C, 0xC3, 0x66, 0xC1, 0xE3, 0x10, 0x5B,
  0x83, 0xC3, 0x18, 0x66, 0x87, 0x1E, 0x80, 0x00, 0x41, 0xEB, 0x01, 0xEA, 0x6A, 0x00,
  0xC3, 0xD9, 0x66, 0x89, 0x1E, 0x80, 0x00, 0x81, 0x36, 0x05, 0x00, 0x0D, 0xF0, 0x81,
  0x36, 0x0D, 0x00, 0xED, 0xBE, 0x8B, 0x1E, 0x84, 0x00, 0xA1, 0x86, 0x00, 0x50, 0x1F,
  0x83, 0x3F, 0x87, 0x75, 0x10, 0x90, 0x90, 0x1F, 0x26, 0xC7, 0x06, 0x00, 0x01, 0xCD,
  0x20, 0xBE, 0x00, 0x01, 0xFF, 0xE6, 0xEA, 0x83, 0xC4, 0x02 };

const gtuint8 EXT_EXE_021 [] = {
  0x8C, 0xC3, 0x66, 0xC1, 0xE3, 0x10, 0x5B, 0x83, 0xC3, 0x1C, 0x90, 0x6A, 0x00, 0x1F,
  0x66, 0x87, 0x1E, 0x80, 0x00, 0x41, 0xEB, 0x01, 0xEA, 0x6A, 0x00, 0xC3, 0xD9, 0xFB,
  0x66, 0x89, 0x1E, 0x80, 0x00, 0x81, 0x36, 0x0D, 0x00, 0xED, 0xBE, 0xEB, 0x01, 0xEA,
  0x83, 0xC4, 0x02, 0x0E, 0x1F, 0x8C, 0xC1, 0x68, 0x00, 0xB8, 0x07, 0x66, 0xBB, 0x10,
  0x00, 0x00, 0x00, 0xEB, 0x01, 0x0F, 0x66, 0x26, 0x67, 0xFF, 0x33, 0x8E, 0xC1, 0x83,
  0x06, 0x3E, 0x01, 0x6A, 0x90, 0xFC, 0xC7, 0x06, 0x00, 0x01 };

const gtuint8 EXT_EXE_022 [] = {
  0x0E, 0x1F, 0xB8, 0x52, 0x01, 0xEB, 0x01, 0xEA, 0xB9, 0x00, 0x00, 0x50, 0x50, 0x5F,
  0x5E, 0xAD, 0x35, 0x00, 0x00, 0xAB, 0xE2, 0xF9 };

const gtuint8 EXT_EXE_023 [] = {
  0x0E, 0x1F, 0xB8, 0x54, 0x01, 0xEB, 0x01, 0xEA, 0xB9, 0x00, 0x00, 0x50, 0x50, 0x5F,
  0x5E, 0xAD, 0x35, 0x00, 0x42, 0xAB, 0xE2, 0xF9, 0x00, 0x30, 0x00, 0x43, 0x00, 0xF2,
  0x00, 0xA9, 0x00, 0xD8, 0x00, 0x26, 0x00, 0x43, 0x00, 0x1A, 0x00, 0x8A, 0x00, 0xBD,
  0x00, 0x12, 0x00, 0xDE, 0x00, 0xF9, 0x00, 0xB2, 0x00, 0x81, 0x00, 0x81, 0x00, 0x4C,
  0x00, 0x80, 0x00, 0x89, 0x00, 0xDF, 0x00, 0x1A, 0x00, 0x81, 0x00, 0x40, 0x00, 0x80,
  0x00, 0xB8, 0x00, 0x31, 0x00, 0xAA, 0x00, 0x42, 0x00, 0xC1 };

const gtuint8 EXT_EXE_024 [] = {
  0x00, 0x00, 0xBE, 0x00, 0x00, 0xBA, 0x00, 0x00, 0xBF, 0x00, 0x00, 0xB9 };

const gtuint8 EXT_EXE_025 [] = {
  0x00, 0x00, 0xBE, 0x00, 0x00, 0xBF, 0x00, 0x00, 0xB9, 0x00, 0x00, 0x8C, 0xCD, 0x81,
  0xED, 0x00, 0x00, 0x8B, 0xDD };

const gtuint8 EXT_EXE_026 [] = {
  0x00, 0x00, 0xB8, 0x00, 0x00, 0x8C, 0xCA, 0x03, 0xD0, 0x8C, 0xC9, 0x81, 0x00, 0x00,
  0x00, 0x51 };

const gtuint8 EXT_EXE_027 [] = {
  0xEA, 0xEB, 0x02, 0xD8, 0x88, 0x5A, 0x1F, 0xBB, 0xFF, 0x00, 0x8D, 0x86, 0x3C, 0x00,
  0x43, 0x53, 0x89, 0x47, 0x02, 0x80, 0x37, 0x03, 0xC3, 0x62, 0x60, 0x57, 0x51, 0xE8,
  0x02, 0x00, 0xEB, 0x1A, 0xE8, 0x02, 0x00, 0x83, 0x11, 0x5F, 0xB9, 0xC3, 0x00, 0xB8,
  0x83, 0x11, 0x2E, 0x87, 0x05, 0x2E, 0x31, 0x85, 0x17, 0x00, 0x47, 0xD1, 0xC8, 0xE2,
  0xF6, 0xC3, 0xDA, 0x8F, 0x03, 0xF6, 0x36, 0x30, 0x0E, 0x7A, 0x45, 0x87, 0xD7, 0xF8,
  0x56, 0xBF, 0x6B, 0x44, 0xFF, 0x3B, 0x13, 0x1E, 0xF6, 0x75 };

const gtuint8 EXT_EXE_028 [] = {
  0xEA, 0xEB, 0x02, 0xD8, 0x88, 0x5A, 0x1F, 0xBB, 0xFF, 0x00, 0x8D, 0x86, 0x3C, 0x00,
  0x43, 0x53, 0x89, 0x47, 0x02, 0x80, 0x37, 0x03, 0xC3, 0x62, 0x57, 0x51, 0xE8, 0x02,
  0x00, 0xEB, 0x1A, 0xE8, 0x02, 0x00, 0x61, 0x0C, 0x5F, 0xB9, 0x2A, 0x00, 0xB8, 0x61,
  0x0C, 0x2E, 0x87, 0x05, 0x2E, 0x31, 0x85, 0x17, 0x00, 0x47, 0xD1, 0xC8, 0xE2, 0xF6,
  0xC3, 0x38, 0x63, 0x80, 0xD1, 0xB2, 0x5D, 0xC6, 0xAA, 0xCF, 0xE6, 0xC9, 0x42, 0x90,
  0xE0, 0x6E, 0xE5, 0x78, 0x3D, 0x2A, 0xFF, 0x2A, 0x52, 0xB2 };

const gtuint8 EXT_EXE_029 [] = {
  0xEC, 0x83, 0xC4, 0x28, 0x4C, 0x87, 0xEC, 0xB0, 0xAD, 0xE6, 0x64, 0xBB, 0xFF, 0x00,
  0x8D, 0x86, 0x28, 0x00, 0x43, 0x53, 0x89, 0x47, 0x02, 0x80, 0x37, 0x03, 0xC3, 0x62,
  0x60, 0x57, 0x51, 0xE8, 0x02, 0x00, 0xEB, 0x1A, 0xE8, 0x02, 0x00, 0xEB, 0x10, 0x5F,
  0xB9, 0xC3, 0x00, 0xB8, 0xEB, 0x10, 0x2E, 0x87, 0x05, 0x2E, 0x31, 0x85, 0x17, 0x00,
  0x47, 0xD1, 0xC8, 0xE2, 0xF6, 0xC3, 0xB2, 0x3A, 0x59, 0xDB, 0xDF, 0xBD, 0x4B, 0xD8,
  0x94, 0xEF, 0x63, 0xA2, 0xFF, 0xED, 0xC0, 0x91, 0x91, 0x8E };

const gtuint8 EXT_EXE_030 [] = {
  0xEC, 0x83, 0xC4, 0x28, 0x4C, 0x87, 0xEC, 0xB0, 0xAD, 0xE6, 0x64, 0xBB, 0xFF, 0x00,
  0x8D, 0x86, 0x28, 0x00, 0x43, 0x53, 0x89, 0x47, 0x02, 0x80, 0x37, 0x03, 0xC3, 0x62,
  0x57, 0x51, 0xE8, 0x02, 0x00, 0xEB, 0x1A, 0xE8, 0x02, 0x00, 0x05, 0x0C, 0x5F, 0xB9,
  0x2A, 0x00, 0xB8, 0x05, 0x0C, 0x2E, 0x87, 0x05, 0x2E, 0x31, 0x85, 0x17, 0x00, 0x47,
  0xD1, 0xC8, 0xE2, 0xF6, 0xC3, 0x5C, 0x51, 0x99, 0xDD, 0x34, 0x1E, 0xE7, 0x3A, 0x07,
  0x82, 0xFB, 0xBF, 0xDC, 0xC6, 0xFD, 0x2C, 0x1C, 0x0F, 0x33 };

//--------------------------------------------------------------------
ExtEXEEntry aEXE_Ext [] =
//--------------------------------------------------------------------
{
// must be 0 - 2! special handling
{ ENTRY (EXT_EXE_024), EXE,     PACKER,    _T ("WWPack "),                   _T ("-2") },
{ ENTRY (EXT_EXE_025), EXE,     PACKER,    _T ("WWPack "),                   _T ("-2") },
{ ENTRY (EXT_EXE_026), EXE,     PACKER,    _T ("WWPack "),                   _T ("-2") },
// the rest...
{ ENTRY (EXT_EXE_010), COM,     ENCRYPTER, _T ("CC286x2 2.1"),               _T ("jjj") },
{ ENTRY (EXT_EXE_008), COM,     ENCRYPTER, _T ("C-Crypt 1.02"),              _T ("jj") },
{ ENTRY (EXT_EXE_015), COM,     CONVERTER, _T ("Com4Mail 1.0"),              _T ("8j") },
{ ENTRY (EXT_EXE_012), COM,     ENCRYPTER, _T ("deeP-CRyPTeR 0.1b"),         _T ("1jj") },
{ ENTRY (EXT_EXE_023), COM,     ENCRYPTER, _T ("fds-cp 0.4"),                _T ("36j") },
{ ENTRY (EXT_EXE_001), EXE,     ENCRYPTER, _T ("JMCryptExe 0.7 (general)"),  _T ("jj48j") },
{ ENTRY (EXT_EXE_022), COM,     ENCRYPTER, _T ("jmt-cp 0.5a / fds-cp 0.4a"), _T ("34j") },
{ ENTRY (EXT_EXE_011), COM,     ENCRYPTER, _T ("LockProg 0.5a"),             _T ("jjj") },
{ ENTRY (EXT_EXE_016), COM,     ENCRYPTER, _T ("Mess 1.14 [COM]"),           _T ("18j") },
{ ENTRY (EXT_EXE_017), COM,     ENCRYPTER, _T ("Mess 1.15 [COM]"),           _T ("18j") },
{ ENTRY (EXT_EXE_018), COM,     ENCRYPTER, _T ("Mess 1.17 [COM]"),           _T ("18j") },
{ ENTRY (EXT_EXE_004), COM,     ENCRYPTER, _T ("RCC II/286 1.14 (hard)"),    _T ("1m50") },
{ ENTRY (EXT_EXE_005), COM,     ENCRYPTER, _T ("RCC II/286 1.14 (mild)"),    _T ("1m50") },
{ ENTRY (EXT_EXE_006), COM,     ENCRYPTER, _T ("RCC II/286 1.15 (hard)"),    _T ("1m50") },
{ ENTRY (EXT_EXE_007), COM,     ENCRYPTER, _T ("RCC II/286 1.15 (mild)"),    _T ("1m50") },
{ ENTRY (EXT_EXE_002), COM,     ENCRYPTER, _T ("RCC II/286 1.16 (hard)"),    _T ("1m50") },
{ ENTRY (EXT_EXE_003), COM,     ENCRYPTER, _T ("RCC II/286 1.16 (mild)"),    _T ("1m50") },
{ ENTRY (EXT_EXE_029), COM,     ENCRYPTER, _T ("RCC II/286 1.17 (hard)"),    _T ("1m50") },
{ ENTRY (EXT_EXE_030), COM,     ENCRYPTER, _T ("RCC II/286 1.17 (mild)"),    _T ("1m50") },
{ ENTRY (EXT_EXE_027), COM,     ENCRYPTER, _T ("RCC II/286 1.18 (hard)"),    _T ("1m50") },
{ ENTRY (EXT_EXE_028), COM,     ENCRYPTER, _T ("RCC II/286 1.18 (mild)"),    _T ("1m50") },
{ ENTRY (EXT_EXE_013), COM,     ENCRYPTER, _T ("SnoopStop 1.15"),            _T ("1jj") },
{ ENTRY (EXT_EXE_014), COM,     ENCRYPTER, _T ("unknown by Synopsis"),       _T ("7j") },
{ ENTRY (EXT_EXE_009), COM,     PROTECTOR, _T ("VSS"),                       _T ("jj") },
{ ENTRY (EXT_EXE_019), COM,     ENCRYPTER, _T ("XcomOR 0.99f/g"),            _T ("27j") },
{ ENTRY (EXT_EXE_020), COM,     ENCRYPTER, _T ("XcomOR 0.99h"),              _T ("41jj") },
{ ENTRY (EXT_EXE_021), COM,     ENCRYPTER, _T ("XcomOR 0.99i"),              _T ("61jj") },
};
