const gtuint8 EXT_PE_001 [] = {
  0x8B, 0x44, 0x24, 0x04, 0x8D, 0x54, 0x24, 0xFC, 0x23, 0x05, 0x11, 0x10, 0x00, 0x00,
  0xE8, 0xC3, 0x04, 0x00, 0x00, 0xFF, 0x35, 0xCC, 0x13, 0x00, 0x00, 0x50, 0xFF, 0x25,
  0xD4, 0x13, 0x00, 0x00, 0x94, 0x9A, 0x8D, 0x91, 0x9A, 0x93, 0xCC, 0xCD, 0x00, 0xB8,
  0x93, 0x90, 0x9D, 0x9E, 0x93, 0xBE, 0x93, 0x93, 0x90, 0x9C, 0x00, 0xB8, 0x93, 0x90,
  0x9D, 0x9E, 0x93, 0xB9, 0x8D, 0x9A, 0x9A, 0x00, 0xB8, 0x9A, 0x8B, 0xB2, 0x90, 0x9B,
  0x8A, 0x93, 0x9A, 0xB7, 0x9E, 0x91, 0x9B, 0x93 };

const gtuint8 EXT_PE_002 [] = {
  0x52, 0x51, 0x55, 0x57, 0x64, 0x67, 0xA1, 0x30, 0x00, 0x85, 0xC0, 0x78,
  0x0D, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x83, 0xC0, 0x07, 0xC6, 0x00, 0xC3, 0xEA,
  0xE8, 0x00, 0x00, 0x00, 0x00, 0x5D, 0x8B, 0xD5, 0x81, 0xED, 0x68, 0x45, 0x40, 0x00,
  0x60, 0x8D, 0x9D, 0xAC, 0x45, 0x40, 0x00, 0xB9, 0x1D, 0x03, 0x00, 0x00, 0xB2, 0x00,
  0x33, 0xC0, 0x02, 0x03, 0xD2, 0x0B, 0xE8, 0x0B, 0x00, 0x00, 0x00, 0x0F, 0x21, 0xC7,
  0x28, 0x13, 0xEB, 0x02, 0x9A, 0xEA, 0x80, 0x33, 0xC3, 0x43 };

const gtuint8 EXT_PE_003 [] = {
  0x8B, 0x44, 0x24, 0x04, 0x8D, 0x54, 0x24, 0xFC, 0x23, 0x05, 0x11, 0x10, 0x00, 0x00,
  0xE8, 0xEB, 0x04, 0x00, 0x00, 0xFF, 0x35, 0xF4, 0x13, 0x00, 0x00, 0x50, 0xFF, 0x25,
  0xFC, 0x13, 0x00, 0x00, 0x94, 0x9A, 0x8D, 0x91, 0x9A, 0x93, 0xCC, 0xCD, 0x00, 0xB8,
  0x93, 0x90, 0x9D, 0x9E, 0x93, 0xBE, 0x93, 0x93, 0x90, 0x9C, 0x00, 0xB8, 0x93, 0x90,
  0x9D, 0x9E, 0x93, 0xB9, 0x8D, 0x9A, 0x9A, 0x00, 0xB8, 0x9A, 0x8B, 0xB2, 0x90, 0x9B,
  0x8A, 0x93, 0x9A, 0xB7, 0x9E, 0x91, 0x9B, 0x93, 0x9A, 0xBE };

const gtuint8 EXT_PE_004 [] = {
  0x8B, 0x44, 0x24, 0x04, 0x23, 0x05, 0x00, 0x00, 0x00, 0x00, 0xE8, 0xED, 0x04, 0x00,
  0x00, 0xFE, 0x05, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xE0, 0x80, 0x3D, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x75, 0x13, 0x90, 0x90, 0x90, 0x90, 0x50, 0x2B, 0xC0, 0xE8, 0xD0, 0x04,
  0x00, 0x00, 0x58, 0xFE, 0x05, 0x00, 0x00, 0x00, 0x00, 0xC3, 0x94, 0x9A, 0x8D, 0x91,
  0x9A, 0x93, 0xCC, 0xCD, 0x00, 0xB8, 0x93, 0x90, 0x9D, 0x9E, 0x93, 0xBE, 0x93, 0x93,
  0x90, 0x9C, 0x00, 0xB8, 0x93, 0x90, 0x9D, 0x9E, 0x93, 0xB9 };

const gtuint8 EXT_PE_005 [] = {
  0x00, 0x00, 0x58, 0x2D, 0x6D, 0x00, 0x00, 0x00, 0x8B, 0xE8, 0x50, 0x60, 0xFD, 0x2E,
  0x2B, 0x85, 0x73, 0x02, 0x00, 0x00, 0x8B, 0xF0, 0x2E, 0x03, 0xB5, 0x7F, 0x02, 0x00,
  0x00, 0x8B, 0xF8, 0x2E, 0x03, 0xBD, 0x77, 0x02, 0x00, 0x00, 0x2E, 0x8B, 0x8D, 0x7B,
  0x02, 0x00, 0x00, 0xF3, 0xA5, 0x8B, 0xF7, 0x83, 0xC6, 0x04, 0x8B, 0xF8, 0xFC, 0xAD,
  0x8B, 0xE8, 0xB3, 0x20, 0xEB, 0x37, 0x33, 0xC0, 0x0F, 0xA5, 0xE8, 0x2A, 0xD9, 0x7E,
  0x03, 0xD3, 0xE5, 0xC3, 0x74, 0x13, 0xF6, 0xDB, 0x8A, 0xCB };

const gtuint8 EXT_PE_006 [] = {
  0x58, 0x2D, 0x6D, 0x00, 0x00, 0x00, 0x8B, 0xE8, 0x50, 0xFD, 0x2E, 0x2B, 0x85, 0x6F,
  0x02, 0x00, 0x00, 0x8B, 0xF0, 0x2E, 0x03, 0xB5, 0x7B, 0x02, 0x00, 0x00, 0x8B, 0xF8,
  0x2E, 0x03, 0xBD, 0x73, 0x02, 0x00, 0x00, 0x2E, 0x8B, 0x8D, 0x77, 0x02, 0x00, 0x00,
  0xF3, 0xA5, 0x8B, 0xF7, 0x83, 0xC6, 0x04, 0x8B, 0xF8, 0xFC, 0xAD, 0x8B, 0xE8, 0xB3,
  0x20, 0xEB, 0x37, 0x33, 0xC0, 0x0F, 0xA5, 0xE8, 0x2A, 0xD9, 0x7E, 0x03, 0xD3, 0xE5,
  0xC3, 0x74, 0x13, 0xF6, 0xDB, 0x8A, 0xCB, 0xD3, 0xE8, 0x95 };

const gtuint8 EXT_PE_007 [] = {
  0x33, 0xC9, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x2D, 0x6F, 0x00, 0x00, 0x00, 0x8B,
  0xE8, 0x50, 0x51, 0xFD, 0x2E, 0x2B, 0x84, 0x0D, 0x9B, 0x02, 0x00, 0x00, 0x8B, 0xF0,
  0x2E, 0x03, 0xB4, 0x0D, 0xA7, 0x02, 0x00, 0x00, 0x8B, 0xF8, 0x2E, 0x03, 0xBC, 0x0D,
  0x9F, 0x02, 0x00, 0x00, 0x57, 0x2E, 0x8B, 0x8C, 0x0D, 0xA3, 0x02, 0x00, 0x00, 0xF3,
  0xA5, 0x8B, 0xF7, 0x83, 0xC6, 0x04, 0x8B, 0xF8, 0xFC, 0xAD, 0x8B, 0xE8, 0xB3, 0x20,
  0xEB, 0x37, 0x33, 0xC0, 0x0F, 0xA5, 0xE8, 0x2A, 0xD9, 0x7E };

const gtuint8 EXT_PE_008 [] = {
  0x00, 0x00, 0x58, 0x2D, 0x6D, 0x00, 0x00, 0x00, 0x50, 0x60, 0x33, 0xC9, 0x50, 0x58,
  0x50, 0x50, 0x8B, 0xE8, 0x51, 0xFD, 0x2E, 0x2B, 0x84, 0x0D, 0xA1, 0x02, 0x00, 0x00,
  0x8B, 0xF0, 0x2E, 0x03, 0xB4, 0x0D, 0xAD, 0x02, 0x00, 0x00, 0x8B, 0xF8, 0x2E, 0x03,
  0xBC, 0x0D, 0xA5, 0x02, 0x00, 0x00, 0x57, 0x2E, 0x8B, 0x8C, 0x0D, 0xA9, 0x02, 0x00,
  0x00, 0xF3, 0xA5, 0x8B, 0xF7, 0x83, 0xC6, 0x04, 0x8B, 0xF8, 0xFC, 0xAD, 0x8B, 0xE8,
  0xB3, 0x20, 0xEB, 0x37, 0x33, 0xC0, 0x0F, 0xA5, 0xE8, 0x2A };

const gtuint8 EXT_PE_009 [] = {
  0x50, 0x6A, 0x00, 0xE8, 0xF8, 0xFE, 0xFF, 0xFF, 0xBA, 0x00, 0x00, 0x00, 0x00, 0x52,
  0x89, 0x05, 0xD8, 0x00, 0x00, 0x00, 0x89, 0x42, 0x04, 0xC7, 0x42, 0x08, 0x00, 0x00,
  0x00, 0x00, 0xC7, 0x42, 0x0C, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x8A, 0xFF, 0xFF, 0xFF,
  0x5A, 0x58, 0xE8, 0x00, 0x00, 0xFF, 0xFF, 0xC3, 0x8B, 0xC0, 0x55, 0x8B, 0xEC, 0x33,
  0xC0, 0x55, 0x68, 0x00, 0x00, 0x40, 0x00, 0x64, 0xFF, 0x30, 0x64, 0x89, 0x20, 0xFF,
  0x05, 0xDC, 0x00, 0x00, 0x00, 0x33, 0xC0, 0x5A, 0x59, 0x59 };

const gtuint8 EXT_PE_010 [] = {
  0x60, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x5D, 0x81, 0xED, 0xAE, 0x98, 0x43, 0x00, 0xB8,
  0xA8, 0x98, 0x43, 0x00, 0x03, 0xC5, 0x2B, 0x85, 0x12, 0x9D, 0x43, 0x00, 0x89, 0x85,
  0x1E, 0x9D, 0x43, 0x00, 0x80, 0xBD, 0x08, 0x9D, 0x43, 0x00, 0x00, 0x75, 0x15, 0xFE,
  0x85, 0x08, 0x9D, 0x43, 0x00, 0xE8, 0x1D, 0x00, 0x00, 0x00, 0xE8, 0x73, 0x02, 0x00,
  0x00, 0xE8, 0x0A, 0x03, 0x00, 0x00, 0x8B, 0x85, 0x0A, 0x9D, 0x43, 0x00, 0x03, 0x85,
  0x1E, 0x9D, 0x43, 0x00, 0x89, 0x44, 0x24, 0x1C, 0x61, 0xFF };

const gtuint8 EXT_PE_011 [] = {
  0x60, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x5D, 0x81, 0xED, 0xAE, 0x98, 0x43, 0x00, 0xB8,
  0xA8, 0x98, 0x43, 0x00, 0x03, 0xC5, 0x2B, 0x85, 0x18, 0x9D, 0x43, 0x00, 0x89, 0x85,
  0x24, 0x9D, 0x43, 0x00, 0x80, 0xBD, 0x0E, 0x9D, 0x43, 0x00, 0x00, 0x75, 0x15, 0xFE,
  0x85, 0x0E, 0x9D, 0x43, 0x00, 0xE8, 0x1D, 0x00, 0x00, 0x00, 0xE8, 0x73, 0x02, 0x00,
  0x00, 0xE8, 0x0A, 0x03, 0x00, 0x00, 0x8B, 0x85, 0x10, 0x9D, 0x43, 0x00, 0x03, 0x85,
  0x24, 0x9D, 0x43, 0x00, 0x89, 0x44, 0x24, 0x1C, 0x61, 0xFF };

const gtuint8 EXT_PE_012 [] = {
  0x60, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x5D, 0x81, 0xED, 0xEA, 0xA8, 0x43, 0x00, 0xB8,
  0xE4, 0xA8, 0x43, 0x00, 0x03, 0xC5, 0x2B, 0x85, 0x78, 0xAD, 0x43, 0x00, 0x89, 0x85,
  0x84, 0xAD, 0x43, 0x00, 0x80, 0xBD, 0x6E, 0xAD, 0x43, 0x00, 0x00, 0x75, 0x15, 0xFE,
  0x85, 0x6E, 0xAD, 0x43, 0x00, 0xE8, 0x1D, 0x00, 0x00, 0x00, 0xE8, 0x73, 0x02, 0x00,
  0x00, 0xE8, 0x0A, 0x03, 0x00, 0x00, 0x8B, 0x85, 0x70, 0xAD, 0x43, 0x00, 0x03, 0x85,
  0x84, 0xAD, 0x43, 0x00, 0x89, 0x44, 0x24, 0x1C, 0x61, 0xFF };

const gtuint8 EXT_PE_013 [] = {
  0x60, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x5D, 0x81, 0xED, 0x3E, 0xD9, 0x43, 0x00, 0xB8,
  0x38, 0xD9, 0x43, 0x00, 0x03, 0xC5, 0x2B, 0x85, 0x0B, 0xDE, 0x43, 0x00, 0x89, 0x85,
  0x17, 0xDE, 0x43, 0x00, 0x80, 0xBD, 0x01, 0xDE, 0x43, 0x00, 0x00, 0x75, 0x15, 0xFE,
  0x85, 0x01, 0xDE, 0x43, 0x00, 0xE8, 0x1D, 0x00, 0x00, 0x00, 0xE8, 0x79, 0x02, 0x00,
  0x00, 0xE8, 0x12, 0x03, 0x00, 0x00, 0x8B, 0x85, 0x03, 0xDE, 0x43, 0x00, 0x03, 0x85,
  0x17, 0xDE, 0x43, 0x00, 0x89, 0x44, 0x24, 0x1C, 0x61, 0xFF };

const gtuint8 EXT_PE_014 [] = {
  0x60, 0xEB, 0x0A, 0x5D, 0xEB, 0x02, 0xFF, 0x25, 0x45, 0xFF, 0xE5, 0xE8, 0xE9, 0xE8,
  0xF1, 0xFF, 0xFF, 0xFF, 0xE9, 0x81, 0xED, 0x23, 0xEA, 0x44, 0x00, 0xBB, 0x10, 0xEA,
  0x44, 0x00, 0x03, 0xDD, 0x2B, 0x9D, 0x72, 0xEF, 0x44, 0x00, 0x8D, 0x8D, 0xDE, 0xF0,
  0x44, 0x00, 0x51, 0xFF, 0x95, 0xC4, 0xF1, 0x44, 0x00, 0x8D, 0x8D, 0x04, 0xF1, 0x44,
  0x00, 0x51, 0x50, 0xFF, 0x95, 0xC0, 0xF1, 0x44, 0x00, 0x6A, 0x00, 0x54, 0x6A, 0x04,
  0x68, 0x14, 0x08, 0x00, 0x00, 0x8D, 0x8D, 0x10, 0xEA, 0x44 };

const gtuint8 EXT_PE_015 [] = {
  0x60, 0xEB, 0x0A, 0x5D, 0xEB, 0x02, 0xFF, 0x25, 0x45, 0xFF, 0xE5, 0xE8, 0xE9, 0xE8,
  0xF1, 0xFF, 0xFF, 0xFF, 0xE9, 0x81, 0xED, 0x23, 0x6A, 0x44, 0x00, 0xBB, 0x10, 0x6A,
  0x44, 0x00, 0x03, 0xDD, 0x2B, 0x9D, 0x72, 0x6F, 0x44, 0x00, 0x8D, 0x8D, 0xDE, 0x70,
  0x44, 0x00, 0x51, 0xFF, 0x95, 0xC4, 0x71, 0x44, 0x00, 0x8D, 0x8D, 0x04, 0x71, 0x44,
  0x00, 0x51, 0x50, 0xFF, 0x95, 0xC0, 0x71, 0x44, 0x00, 0x6A, 0x00, 0x54, 0x6A, 0x04,
  0x68, 0x14, 0x08, 0x00, 0x00, 0x8D, 0x8D, 0x10, 0x6A, 0x44 };

const gtuint8 EXT_PE_016 [] = {
  0x60, 0xEB, 0x0A, 0x5D, 0xEB, 0x02, 0xFF, 0x25, 0x45, 0xFF, 0xE5, 0xE8, 0xE9, 0xE8,
  0xF1, 0xFF, 0xFF, 0xFF, 0xE9, 0x81, 0xED, 0x23, 0x6A, 0x44, 0x00, 0xBB, 0x10, 0x6A,
  0x44, 0x00, 0x03, 0xDD, 0x2B, 0x9D, 0x46, 0x6F, 0x44, 0x00, 0x8D, 0x8D, 0xEA, 0x6F,
  0x44, 0x00, 0x51, 0xFF, 0x95, 0xD0, 0x70, 0x44, 0x00, 0x8D, 0x8D, 0x10, 0x70, 0x44,
  0x00, 0x51, 0x50, 0xFF, 0x95, 0xCC, 0x70, 0x44, 0x00, 0x6A, 0x00, 0x54, 0x6A, 0x04,
  0x68, 0x20, 0x07, 0x00, 0x00, 0x8D, 0x8D, 0x10, 0x6A, 0x44 };

const gtuint8 EXT_PE_017 [] = {
  0x8B, 0x2C, 0x24, 0x81, 0xED, 0x1A, 0x29, 0x44, 0x00, 0xC3, 0x55, 0x8B, 0xEC, 0x60,
  0x55, 0x8B, 0x75, 0x08, 0x8B, 0x7D, 0x0C, 0xFC, 0xB2, 0x80, 0x8A, 0x06, 0x46, 0x88,
  0x07, 0x47, 0x02, 0xD2, 0x75, 0x05, 0x8A, 0x16, 0x46, 0x12, 0xD2, 0x73, 0xEF, 0x02,
  0xD2, 0x75, 0x05, 0x8A, 0x16, 0x46, 0x12, 0xD2, 0x73, 0x4A, 0x33, 0xC0, 0x02, 0xD2,
  0x75, 0x05, 0x8A, 0x16, 0x46, 0x12, 0xD2, 0x0F, 0x83, 0xD6, 0x00, 0x00, 0x00, 0x02,
  0xD2, 0x75, 0x05, 0x8A, 0x16, 0x46, 0x12, 0xD2, 0x13, 0xC0 };

const gtuint8 EXT_PE_018 [] = {
  0x55, 0x89, 0xE5, 0x9C, 0x53, 0x56, 0x57, 0xFC, 0xE8, 0xA9, 0xFF, 0xFF, 0xFF, 0x68,
  0x0C, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0xB8, 0x08, 0x00, 0x00, 0x00,
  0xE8, 0x00, 0x00, 0xFF, 0xFF, 0xE8, 0x00, 0x00, 0xFF, 0xFF, 0x8D, 0x65, 0xF0, 0x5F,
  0x5E, 0x5B, 0x9D, 0x5D, 0xC3, 0x8B, 0x44, 0x24, 0x04, 0x8B, 0x54, 0x24, 0x08, 0x83,
  0xFA, 0x01, 0x74, 0x17, 0x83, 0xFA, 0x02, 0x74, 0x0A, 0x83, 0xFA, 0x03, 0x74, 0x05,
  0x83, 0xFA, 0x00, 0x74, 0x2A, 0xB8, 0xFF, 0xFF, 0xFF, 0xFF };

const gtuint8 EXT_PE_019 [] = {
  0x55, 0x8B, 0xEC, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x85, 0xC0, 0x74, 0x09, 0xB8, 0x01,
  0x00, 0x00, 0x00, 0x5D, 0xC2, 0x0C, 0x00, 0x8B, 0x45, 0x0C, 0x57, 0x56, 0x53, 0x8B,
  0x5D, 0x10, 0xBF, 0x00, 0x00, 0x00, 0x00, 0x2B, 0xD8, 0xC7, 0x05, 0x00, 0x00, 0x00,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x81, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x2B, 0xF8, 0x89,
  0x7D, 0x08, 0x81, 0x3B, 0x44, 0x33, 0x22, 0x11, 0x74, 0x05, 0x90, 0x90, 0xCC, 0x90,
  0x90, 0x8B, 0x43, 0x04, 0x85, 0xC0, 0x74, 0x01, 0xCC, 0x8B };

const gtuint8 EXT_PE_020 [] = {
  0xE8, 0x1B, 0x00, 0x00, 0x00, 0x8B, 0x64, 0x24, 0x08, 0xE8, 0xDF, 0xFF, 0xFF, 0xFF,
  0xC6, 0x85, 0xCC, 0x26, 0x40, 0x00, 0xC3, 0xE8, 0x4B, 0xFF, 0xFF, 0xFF, 0xE9, 0x16,
  0xFF, 0xFF, 0xFF, 0xB7, 0x64, 0x67, 0xFF, 0x36, 0x00, 0x00, 0x64, 0x67, 0x89, 0x26,
  0x00, 0x00, 0x8D, 0xB5, 0x47, 0x26, 0x40, 0x00, 0x8B, 0xFE, 0xB9, 0xCA, 0x00, 0x00,
  0x00, 0x8A, 0xA5, 0x11, 0x27, 0x40, 0x00, 0xAC, 0x32, 0xC4, 0xFE, 0xC4, 0xC0, 0xC4,
  0x02, 0x80, 0xC4, 0x90, 0xAA, 0xE2, 0xF2, 0xE9, 0xCB, 0xFE };

const gtuint8 EXT_PE_021 [] = {
  0x8B, 0x2C, 0x24, 0x81, 0xED, 0xAB, 0x39, 0x44, 0x00, 0xC3, 0x8B, 0x44, 0x24, 0x10,
  0x81, 0xEC, 0x54, 0x03, 0x00, 0x00, 0x8D, 0x4C, 0x24, 0x04, 0x50, 0xE8, 0xA8, 0x03,
  0x00, 0x00, 0x8B, 0x8C, 0x24, 0x5C, 0x03, 0x00, 0x00, 0x8B, 0x94, 0x24, 0x58, 0x03,
  0x00, 0x00, 0x51, 0x52, 0x8D, 0x4C, 0x24, 0x0C, 0xE8, 0x0D, 0x04, 0x00, 0x00, 0x84,
  0xC0, 0x75, 0x0A, 0x83, 0xC8, 0xFF, 0x81, 0xC4, 0x54, 0x03, 0x00, 0x00, 0xC3, 0x8B,
  0x8C, 0x24, 0x60, 0x03, 0x00, 0x00, 0x8D, 0x04, 0x24, 0x50 };

const gtuint8 EXT_PE_022 [] = {
  0x8B, 0x2C, 0x24, 0x81, 0xED, 0x83, 0x29, 0x44, 0x00, 0xC3, 0x8B, 0x44, 0x24, 0x10,
  0x81, 0xEC, 0x54, 0x03, 0x00, 0x00, 0x8D, 0x4C, 0x24, 0x04, 0x50, 0xE8, 0xA8, 0x03,
  0x00, 0x00, 0x8B, 0x8C, 0x24, 0x5C, 0x03, 0x00, 0x00, 0x8B, 0x94, 0x24, 0x58, 0x03,
  0x00, 0x00, 0x51, 0x52, 0x8D, 0x4C, 0x24, 0x0C, 0xE8, 0x0D, 0x04, 0x00, 0x00, 0x84,
  0xC0, 0x75, 0x0A, 0x83, 0xC8, 0xFF, 0x81, 0xC4, 0x54, 0x03, 0x00, 0x00, 0xC3, 0x8B,
  0x8C, 0x24, 0x60, 0x03, 0x00, 0x00, 0x8D, 0x04, 0x24, 0x50 };

const gtuint8 EXT_PE_023 [] = {
  0x8B, 0x2C, 0x24, 0x81, 0xED, 0x37, 0x39, 0x44, 0x00, 0xC3, 0x8B, 0x44, 0x24, 0x10,
  0x81, 0xEC, 0x54, 0x03, 0x00, 0x00, 0x8D, 0x4C, 0x24, 0x04, 0x50, 0xE8, 0xA8, 0x03,
  0x00, 0x00, 0x8B, 0x8C, 0x24, 0x5C, 0x03, 0x00, 0x00, 0x8B, 0x94, 0x24, 0x58, 0x03,
  0x00, 0x00, 0x51, 0x52, 0x8D, 0x4C, 0x24, 0x0C, 0xE8, 0x0D, 0x04, 0x00, 0x00, 0x84,
  0xC0, 0x75, 0x0A, 0x83, 0xC8, 0xFF, 0x81, 0xC4, 0x54, 0x03, 0x00, 0x00, 0xC3, 0x8B,
  0x8C, 0x24, 0x60, 0x03, 0x00, 0x00, 0x8D, 0x04, 0x24, 0x50 };

const gtuint8 EXT_PE_024 [] = {
  0xEB, 0x02, 0x0F, 0x4D, 0x55, 0xEB, 0x02, 0x0F, 0xC7, 0xE8, 0x00, 0x00, 0x00, 0x00,
  0xEB, 0x02, 0x83, 0x3D, 0x5D, 0xEB, 0x03, 0x0F, 0xCA, 0x0F, 0x81, 0xED, 0x6D, 0x23,
  0x40, 0x00, 0x52, 0x8B, 0x54, 0x24, 0x08, 0xE8, 0xA5, 0xFD, 0xFF, 0xFF, 0x89, 0x95,
  0xD1, 0x2A, 0x40, 0x00, 0x5A, 0xEB, 0x02, 0x0F, 0x4D, 0xEB, 0x02, 0xFF, 0x1D, 0xEB,
  0x02, 0x0F, 0xC7, 0xEB, 0x02, 0x0F, 0xC0, 0xEB, 0x03, 0x0F, 0xCA, 0x0F, 0xEB, 0x03,
  0xFF, 0x1D, 0x34, 0xEB, 0x02, 0x83, 0x3D, 0xEB, 0x02, 0xC7 };

const gtuint8 EXT_PE_025 [] = {
  0xEB, 0x02, 0x0F, 0x4D, 0x55, 0xEB, 0x02, 0x0F, 0xC7, 0xE8, 0x00, 0x00, 0x00, 0x00,
  0xEB, 0x02, 0x83, 0x3D, 0x5D, 0xEB, 0x03, 0x0F, 0xCA, 0x0F, 0x81, 0xED, 0x6D, 0x23,
  0x40, 0x00, 0x52, 0x8B, 0x54, 0x24, 0x08, 0xE8, 0xA5, 0xFD, 0xFF, 0xFF, 0x89, 0x95,
  0x59, 0x2B, 0x40, 0x00, 0x5A, 0xEB, 0x02, 0x0F, 0x4D, 0xEB, 0x02, 0xFF, 0x1D, 0xEB,
  0x02, 0x0F, 0xC7, 0xEB, 0x02, 0x0F, 0xC0, 0xEB, 0x03, 0x0F, 0xCA, 0x0F, 0xEB, 0x03,
  0xFF, 0x1D, 0x34, 0xEB, 0x02, 0x83, 0x3D, 0xEB, 0x02, 0xC7 };

const gtuint8 EXT_PE_026 [] = {
  0xEB, 0x02, 0x0F, 0x4D, 0x55, 0xEB, 0x02, 0x0F, 0xC7, 0xE8, 0x00, 0x00, 0x00, 0x00,
  0xEB, 0x02, 0x83, 0x3D, 0x5D, 0xEB, 0x03, 0x0F, 0xCA, 0x0F, 0x81, 0xED, 0x70, 0x23,
  0x40, 0x00, 0x52, 0x8B, 0x54, 0x24, 0x08, 0xE8, 0xA2, 0xFD, 0xFF, 0xFF, 0x89, 0x95,
  0xD0, 0x2A, 0x40, 0x00, 0x5A, 0xEB, 0x02, 0x0F, 0x4D, 0xEB, 0x02, 0xFF, 0x1D, 0xEB,
  0x02, 0x0F, 0xC7, 0xEB, 0x02, 0x0F, 0xC0, 0xEB, 0x03, 0x0F, 0xCA, 0x0F, 0xEB, 0x03,
  0xFF, 0x1D, 0x34, 0xEB, 0x02, 0x83, 0x3D, 0xEB, 0x02, 0xC7 };

const gtuint8 EXT_PE_027 [] = {
  0xEB, 0x02, 0x0F, 0x4D, 0x55, 0xEB, 0x02, 0x0F, 0xC7, 0xE8, 0x00, 0x00, 0x00, 0x00,
  0xEB, 0x02, 0x83, 0x3D, 0x5D, 0xEB, 0x03, 0x0F, 0xCA, 0x0F, 0x81, 0xED, 0x00, 0x00,
  0x40, 0x00, 0x52, 0x8B, 0x54, 0x24, 0x08, 0xE8, 0x00, 0x00, 0xFF, 0xFF, 0x89, 0x95,
  0x00, 0x00, 0x40, 0x00, 0x5A, 0xEB, 0x02, 0x0F, 0x4D, 0xEB, 0x02, 0xFF, 0x1D, 0xEB,
  0x02, 0x0F, 0xC7, 0xEB, 0x02, 0x0F, 0xC0, 0xEB, 0x03, 0x0F, 0xCA, 0x0F, 0xEB, 0x03,
  0xFF, 0x1D, 0x34, 0xEB, 0x02, 0x83, 0x3D, 0xEB, 0x02, 0xC7 };

const gtuint8 EXT_PE_028 [] = {
  0x53, 0x56, 0x57, 0x55, 0x8B, 0x00, 0x24, 0x14, 0x8B, 0x00, 0x24, 0x18, 0x8B, 0x6C,
  0x24, 0x1C, 0x83, 0x00, 0x03, 0x0F, 0x87, 0x00, 0x01, 0x00, 0x00, 0x89, 0x00, 0x2E,
  0xFF, 0x24, 0x85 };

const gtuint8 EXT_PE_029 [] = {
  0xEB, 0x02, 0x0F, 0x4D, 0x55, 0xEB, 0x02, 0x0F, 0xC7, 0xE8, 0x00, 0x00, 0x00, 0x00,
  0xEB, 0x02, 0x83, 0x3D, 0x5D, 0xEB, 0x03, 0x0F, 0xCA, 0x0F, 0x81, 0xED, 0x6D, 0x23,
  0x40, 0x00, 0x52, 0x8B, 0x54, 0x24, 0x08, 0xE8, 0xA5, 0xFD, 0xFF, 0xFF, 0x89, 0x95,
  0x59, 0x2B, 0x40, 0x00, 0x5A, 0xEB, 0x02, 0x0F, 0x4D, 0xEB, 0x02, 0xFF, 0x1D, 0xEB,
  0x02, 0x0F, 0xC7, 0xEB, 0x02, 0x0F, 0xC0, 0xEB, 0x03, 0x0F, 0xCA, 0x0F, 0xEB, 0x03,
  0xFF, 0x1D, 0x34, 0xEB, 0x02, 0x83, 0x3D, 0xEB, 0x02, 0xC7 };

const gtuint8 EXT_PE_030 [] = {
  0x83, 0xEC, 0x10, 0xFC, 0x51, 0xE8, 0xD2, 0xFF, 0xFF, 0xFF, 0xE8, 0x00, 0x00, 0xFF,
  0xFF, 0xA3, 0x00, 0x00, 0x00, 0x00, 0x5A, 0xE8, 0x96, 0xFE, 0xFF, 0xFF, 0xE8, 0x7B,
  0x03, 0x00, 0x00, 0xA3, 0x00, 0x00, 0x00, 0x00, 0x6A, 0x00, 0xE8, 0x00, 0x03, 0x00,
  0x00, 0xA3, 0x00, 0x00, 0x00, 0x00, 0xA3, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x00, 0x00,
  0xFF, 0xFF, 0x83, 0xF8, 0x03, 0x0F, 0x92, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8D, 0x04,
  0x24, 0x33, 0xD2, 0x64, 0x8B, 0x0A, 0x64, 0x89, 0x02, 0x89 };

const gtuint8 EXT_PE_031 [] = {
  0x60, 0xE8, 0x01, 0x00, 0x00, 0x00, 0xE8, 0x83, 0xC4, 0x04, 0xE8, 0x01, 0x00, 0x00,
  0x00, 0xE9, 0x5D, 0x81, 0xED, 0xD5, 0x22, 0x40, 0x00, 0xE8, 0x06, 0x02, 0x00, 0x00,
  0xE8, 0xEB, 0x08, 0xEB, 0x02, 0xCD, 0x20, 0xFF, 0x24, 0x24, 0x9A, 0x66, 0xBE, 0x47,
  0x46, 0xE8, 0x01, 0x00, 0x00, 0x00, 0x9A, 0x59, 0x8D, 0x95, 0x27, 0x23, 0x40, 0x00,
  0xE8, 0x01, 0x00, 0x00, 0x00, 0x69, 0x58, 0x66, 0xBF, 0x4D, 0x4A, 0xE8, 0xC1, 0x01,
  0x00, 0x00, 0x8D, 0x52, 0xF9, 0xE8, 0x01, 0x00, 0x00, 0x00 };

const gtuint8 EXT_PE_032 [] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xB0, 0x81, 0x40, 0x00, 0x68, 0x74, 0x48, 0x40,
  0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00,
  0x00, 0x81, 0xEC, 0x44, 0x05, 0x00, 0x00, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0x6A,
  0x01, 0xFF, 0x15, 0x7C, 0x80, 0x40, 0x00, 0x50, 0xE8, 0xDD, 0x0D, 0x00, 0x00, 0x6A,
  0x05, 0xE8, 0x87, 0x0E, 0x00, 0x00, 0x83, 0xE0, 0x03, 0x50, 0xE8, 0x92, 0xF1, 0xFF,
  0xFF, 0x83, 0xC4, 0x10, 0xE8, 0x23, 0xFE, 0xFF, 0xFF, 0x68 };

const gtuint8 EXT_PE_033 [] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xC8, 0x81, 0x40, 0x00, 0x68, 0x4C, 0x49, 0x40,
  0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00,
  0x00, 0x81, 0xEC, 0x44, 0x05, 0x00, 0x00, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0x6A,
  0x01, 0xFF, 0x15, 0x7C, 0x80, 0x40, 0x00, 0x50, 0xE8, 0xDD, 0x0D, 0x00, 0x00, 0x6A,
  0x05, 0xE8, 0x87, 0x0E, 0x00, 0x00, 0x83, 0xE0, 0x03, 0x50, 0xE8, 0xE2, 0xF2, 0xFF,
  0xFF, 0x83, 0xC4, 0x10, 0xE8, 0x23, 0xFE, 0xFF, 0xFF, 0x68 };

const gtuint8 EXT_PE_034 [] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xB0, 0x91, 0x40, 0x00, 0x68, 0x64, 0x4A, 0x40,
  0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00,
  0x00, 0x81, 0xEC, 0x48, 0x05, 0x00, 0x00, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0x6A,
  0x01, 0xFF, 0x15, 0x80, 0x90, 0x40, 0x00, 0x50, 0xE8, 0x24, 0x0E, 0x00, 0x00, 0x6A,
  0x01, 0xE8, 0xCE, 0x0E, 0x00, 0x00, 0x83, 0xE0, 0x03, 0x50, 0xE8, 0xC5, 0xF0, 0xFF,
  0xFF, 0x83, 0xC4, 0x10, 0xE8, 0x56, 0xFD, 0xFF, 0xFF, 0x68 };

const gtuint8 EXT_PE_035 [] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xC8, 0x81, 0x40, 0x00, 0x68, 0x34, 0x4B, 0x40,
  0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00,
  0x00, 0x81, 0xEC, 0x48, 0x05, 0x00, 0x00, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0x6A,
  0x01, 0xFF, 0x15, 0x80, 0x80, 0x40, 0x00, 0x50, 0xE8, 0x24, 0x0E, 0x00, 0x00, 0x6A,
  0x01, 0xE8, 0xCE, 0x0E, 0x00, 0x00, 0x83, 0xE0, 0x03, 0x50, 0xE8, 0x15, 0xF2, 0xFF,
  0xFF, 0x83, 0xC4, 0x10, 0xE8, 0x56, 0xFD, 0xFF, 0xFF, 0x68 };

const gtuint8 EXT_PE_036 [] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xC8, 0xC1, 0x40, 0x00, 0x68, 0xC4, 0x89, 0x40,
  0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00,
  0x00, 0x81, 0xC4, 0x90, 0xFA, 0xFF, 0xFF, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0x6A,
  0x01, 0xFF, 0x15, 0x90, 0xC0, 0x40, 0x00, 0x50, 0xE8, 0xB1, 0x15, 0x00, 0x00, 0x83,
  0xC4, 0x08, 0x6A, 0x01, 0xE8, 0x73, 0x16, 0x00, 0x00, 0x83, 0xC4, 0x04, 0x83, 0xE0,
  0x03, 0x50, 0xE8, 0x4D, 0xE8, 0xFF, 0xFF, 0x83, 0xC4, 0x04 };

const gtuint8 EXT_PE_037 [] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xD8, 0xC1, 0x40, 0x00, 0x68, 0xA4, 0x89, 0x40,
  0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00,
  0x00, 0x81, 0xC4, 0x90, 0xFA, 0xFF, 0xFF, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0x6A,
  0x01, 0xFF, 0x15, 0x90, 0xC0, 0x40, 0x00, 0x50, 0xE8, 0xB1, 0x15, 0x00, 0x00, 0x83,
  0xC4, 0x08, 0x6A, 0x01, 0xE8, 0x73, 0x16, 0x00, 0x00, 0x83, 0xC4, 0x04, 0x83, 0xE0,
  0x03, 0x50, 0xE8, 0xAD, 0xEB, 0xFF, 0xFF, 0x83, 0xC4, 0x04 };

const gtuint8 EXT_PE_038 [] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xE8, 0xE1, 0x40, 0x00, 0x68, 0xB4, 0x95, 0x40,
  0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00,
  0x00, 0x81, 0xC4, 0x88, 0xF9, 0xFF, 0xFF, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0x6A,
  0x01, 0xFF, 0x15, 0x9C, 0xE0, 0x40, 0x00, 0x50, 0xE8, 0x80, 0x1C, 0x00, 0x00, 0x83,
  0xC4, 0x08, 0x6A, 0x08, 0xE8, 0xA0, 0x0E, 0x00, 0x00, 0x83, 0xC4, 0x04, 0x83, 0xE0,
  0x03, 0x50, 0xE8, 0x1D, 0xE3, 0xFF, 0xFF, 0x83, 0xC4, 0x04 };

const gtuint8 EXT_PE_039 [] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xF8, 0xE1, 0x40, 0x00, 0x68, 0x94, 0x95, 0x40,
  0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00,
  0x00, 0x81, 0xC4, 0x88, 0xF9, 0xFF, 0xFF, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0x6A,
  0x01, 0xFF, 0x15, 0x9C, 0xE0, 0x40, 0x00, 0x50, 0xE8, 0x80, 0x1C, 0x00, 0x00, 0x83,
  0xC4, 0x08, 0x6A, 0x08, 0xE8, 0xA0, 0x0E, 0x00, 0x00, 0x83, 0xC4, 0x04, 0x83, 0xE0,
  0x03, 0x50, 0xE8, 0x7D, 0xE6, 0xFF, 0xFF, 0x83, 0xC4, 0x04 };

const gtuint8 EXT_PE_040 [] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xE8, 0xE1, 0x40, 0x00, 0x68, 0xD4, 0x96, 0x40,
  0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00,
  0x00, 0x81, 0xC4, 0x84, 0xF9, 0xFF, 0xFF, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0x6A,
  0x01, 0xFF, 0x15, 0x9C, 0xE0, 0x40, 0x00, 0x50, 0xE8, 0x3C, 0x1D, 0x00, 0x00, 0x83,
  0xC4, 0x08, 0x6A, 0x0A, 0xE8, 0x0F, 0x0F, 0x00, 0x00, 0x83, 0xC4, 0x04, 0x83, 0xE0,
  0x03, 0x50, 0xE8, 0xAD, 0xE2, 0xFF, 0xFF, 0x83, 0xC4, 0x04 };

const gtuint8 EXT_PE_041 [] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xF8, 0xE1, 0x40, 0x00, 0x68, 0xB4, 0x96, 0x40,
  0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00,
  0x00, 0x81, 0xC4, 0x84, 0xF9, 0xFF, 0xFF, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0x6A,
  0x01, 0xFF, 0x15, 0x9C, 0xE0, 0x40, 0x00, 0x50, 0xE8, 0x3C, 0x1D, 0x00, 0x00, 0x83,
  0xC4, 0x08, 0x6A, 0x0A, 0xE8, 0x0F, 0x0F, 0x00, 0x00, 0x83, 0xC4, 0x04, 0x83, 0xE0,
  0x03, 0x50, 0xE8, 0x0D, 0xE6, 0xFF, 0xFF, 0x83, 0xC4, 0x04 };

const gtuint8 EXT_PE_042 [] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xF0, 0xF1, 0x40, 0x00, 0x68, 0x94, 0x9D, 0x40,
  0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00,
  0x00, 0x81, 0xC4, 0x84, 0xF9, 0xFF, 0xFF, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0xE8,
  0xA3, 0x19, 0x00, 0x00, 0x25, 0xFF, 0x00, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x11, 0xC7,
  0x05, 0x9C, 0x24, 0x41, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x33, 0xC0, 0xE9, 0xC0, 0x0E,
  0x00, 0x00, 0x6A, 0x01, 0xFF, 0x15, 0xA8, 0xF0, 0x40, 0x00 };

const gtuint8 EXT_PE_043 [] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0x00, 0xF2, 0x40, 0x00, 0x68, 0x74, 0x9D, 0x40,
  0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00,
  0x00, 0x81, 0xC4, 0x84, 0xF9, 0xFF, 0xFF, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0xE8,
  0xA3, 0x19, 0x00, 0x00, 0x25, 0xFF, 0x00, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x11, 0xC7,
  0x05, 0x8C, 0x24, 0x41, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x33, 0xC0, 0xE9, 0xC0, 0x0E,
  0x00, 0x00, 0x6A, 0x01, 0xFF, 0x15, 0xA8, 0xF0, 0x40, 0x00 };

const gtuint8 EXT_PE_044 [] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xE0, 0xF1, 0x40, 0x00, 0x68, 0xE4, 0x9D, 0x40,
  0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00,
  0x00, 0x81, 0xC4, 0x84, 0xF9, 0xFF, 0xFF, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0xE8,
  0xD2, 0x19, 0x00, 0x00, 0x25, 0xFF, 0x00, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x11, 0xC7,
  0x05, 0x9C, 0x24, 0x41, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x33, 0xC0, 0xE9, 0xE2, 0x0E,
  0x00, 0x00, 0x6A, 0x01, 0xFF, 0x15, 0xA8, 0xF0, 0x40, 0x00 };

const gtuint8 EXT_PE_045 [] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xF0, 0xF1, 0x40, 0x00, 0x68, 0xC4, 0x9D, 0x40,
  0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00,
  0x00, 0x81, 0xC4, 0x84, 0xF9, 0xFF, 0xFF, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0xE8,
  0xD2, 0x19, 0x00, 0x00, 0x25, 0xFF, 0x00, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x11, 0xC7,
  0x05, 0x8C, 0x24, 0x41, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x33, 0xC0, 0xE9, 0xE2, 0x0E,
  0x00, 0x00, 0x6A, 0x01, 0xFF, 0x15, 0xA8, 0xF0, 0x40, 0x00 };

const gtuint8 EXT_PE_046 [79] = {
  0xFC, 0x60, 0xE8, 0x02, 0x00, 0x00, 0x00, 0xE8, 0x00, 0xE8, 0x00, 0x00,
  0x00, 0x00, 0x5E, 0x2B, 0xC9, 0x58, 0x74, 0x02, 0xCD, 0x20, 0xB9, 0x36,
  0x14, 0x00, 0x00, 0x8B, 0xC1, 0xF8, 0x73, 0x02, 0xCD, 0x20, 0x83, 0xC6,
  0x33, 0x8D, 0x44, 0x81, 0x67, 0xE8, 0x02, 0x00, 0x00, 0x00, 0xE8, 0x80,
  0x30, 0x06, 0x46, 0x5A, 0xEB, 0x01, 0xE9, 0xD4, 0x09, 0x49, 0x7F, 0xE9,
  0x67, 0xE3, 0x02, 0xCD, 0x20, 0x9D, 0xB9, 0xB1, 0xAE, 0xA5, 0x67, 0x1C,
  0xDF, 0x57, 0xB9, 0x88, 0x9F, 0x82, 0x79 };

const gtuint8 EXT_PE_047 [79] = {
  0x60, 0xF9, 0xE8, 0x02, 0x00, 0x00, 0x00, 0xE8, 0x00, 0xE8, 0x00, 0x00,
  0x00, 0x00, 0x5E, 0x2B, 0xC9, 0x58, 0x74, 0x02, 0xCD, 0x20, 0xB9, 0x36,
  0x14, 0x00, 0x00, 0x8B, 0xC1, 0xF8, 0x73, 0x02, 0xCD, 0x20, 0x83, 0xC6,
  0x33, 0x8D, 0x44, 0x81, 0x67, 0xE8, 0x02, 0x00, 0x00, 0x00, 0xE8, 0x80,
  0x30, 0x06, 0x46, 0x5A, 0xEB, 0x01, 0xE9, 0xD4, 0x09, 0x49, 0x7F, 0xE9,
  0x67, 0xE3, 0x02, 0xCD, 0x20, 0x9D, 0xB9, 0xB1, 0xAE, 0xA5, 0x67, 0x1C,
  0x3A, 0x0B, 0xB1, 0x2E, 0xCB, 0xC8, 0xFA };

const gtuint8 EXT_PE_048 [79] = {
  0x60, 0xF8, 0xE8, 0x02, 0x00, 0x00, 0x00, 0xE8, 0x00, 0xE8, 0x00, 0x00,
  0x00, 0x00, 0x5E, 0x2B, 0xC9, 0x58, 0x74, 0x02, 0xCD, 0x20, 0xB9, 0xDF,
  0x18, 0x00, 0x00, 0x8B, 0xC1, 0xF8, 0x73, 0x02, 0xCD, 0x20, 0x83, 0xC6,
  0x33, 0x8D, 0x44, 0x81, 0x67, 0xE8, 0x02, 0x00, 0x00, 0x00, 0xE8, 0x80,
  0x30, 0x06, 0x46, 0x5A, 0xEB, 0x01, 0xE9, 0xD4, 0x09, 0x49, 0x7F, 0xE9,
  0x67, 0xE3, 0x02, 0xCD, 0x20, 0x2A, 0x97, 0x7E, 0x47, 0x62, 0xA2, 0xDF,
  0x3C, 0xC6, 0x2F, 0xBD, 0x38, 0xD6, 0x01 };

const gtuint8 EXT_PE_049 [79] = {
  0x60, 0xF8, 0xE8, 0x02, 0x00, 0x00, 0x00, 0xE8, 0x00, 0xE8, 0x00, 0x00,
  0x00, 0x00, 0x5E, 0x2B, 0xC9, 0x58, 0x74, 0x02, 0xCD, 0x20, 0xB9, 0xDF,
  0x18, 0x00, 0x00, 0x8B, 0xC1, 0xF8, 0x73, 0x02, 0xCD, 0x20, 0x83, 0xC6,
  0x33, 0x8D, 0x44, 0x81, 0x67, 0xE8, 0x02, 0x00, 0x00, 0x00, 0xE8, 0x80,
  0x30, 0x06, 0x46, 0x5A, 0xEB, 0x01, 0xE9, 0xD4, 0x09, 0x49, 0x7F, 0xE9,
  0x67, 0xE3, 0x02, 0xCD, 0x20, 0x2A, 0x97, 0x7E, 0x47, 0x62, 0xA2, 0xDF,
  0x7C, 0x86, 0x6F, 0xFD, 0x78, 0x96, 0x41 };

const gtuint8 EXT_PE_050 [79] = {
  0x90, 0x60, 0xE8, 0x02, 0x00, 0x00, 0x00, 0xE8, 0x00, 0xE8, 0x00, 0x00,
  0x00, 0x00, 0x5E, 0x2B, 0xC9, 0x58, 0x74, 0x02, 0xCD, 0x20, 0xB9, 0x1D,
  0x19, 0x00, 0x00, 0x8B, 0xC1, 0xF8, 0x73, 0x02, 0xCD, 0x20, 0x83, 0xC6,
  0x33, 0x8D, 0x44, 0x81, 0x67, 0xE8, 0x02, 0x00, 0x00, 0x00, 0xE8, 0x80,
  0x30, 0x06, 0x46, 0x5A, 0xEB, 0x01, 0xE9, 0xD4, 0x09, 0x49, 0x7F, 0xE9,
  0x67, 0xE3, 0x02, 0xCD, 0x20, 0x10, 0xDD, 0x85, 0x95, 0x94, 0x4C, 0x1D,
  0x95, 0x0B, 0xE3, 0xC0, 0xE1, 0xB6, 0xF3 };

const gtuint8 EXT_PE_051 [79] = {
  0x60, 0xF8, 0xE8, 0x02, 0x00, 0x00, 0x00, 0xE8, 0x00, 0xE8, 0x00, 0x00,
  0x00, 0x00, 0x5E, 0x2B, 0xC9, 0x58, 0x74, 0x02, 0xCD, 0x20, 0xB9, 0x1D,
  0x19, 0x00, 0x00, 0x8B, 0xC1, 0xF8, 0x73, 0x02, 0xCD, 0x20, 0x83, 0xC6,
  0x33, 0x8D, 0x44, 0x81, 0x67, 0xE8, 0x02, 0x00, 0x00, 0x00, 0xE8, 0x80,
  0x30, 0x06, 0x46, 0x5A, 0xEB, 0x01, 0xE9, 0xD4, 0x09, 0x49, 0x7F, 0xE9,
  0x67, 0xE3, 0x02, 0xCD, 0x20, 0x10, 0xDD, 0x85, 0x95, 0x94, 0x4C, 0x1D,
  0x10, 0x1F, 0x74, 0x26, 0xD5, 0xD4, 0xD8 };

const gtuint8 EXT_PE_052 [79] = {
  0xFC, 0x60, 0xE8, 0x02, 0x00, 0x00, 0x00, 0xE8, 0x00, 0xE8, 0x00, 0x00,
  0x00, 0x00, 0x5E, 0x2B, 0xC9, 0x58, 0x74, 0x02, 0xCD, 0x20, 0xB9, 0x51,
  0x19, 0x00, 0x00, 0x8B, 0xC1, 0xF8, 0x73, 0x02, 0xCD, 0x20, 0x83, 0xC6,
  0x33, 0x8D, 0x44, 0x81, 0x67, 0xE8, 0x02, 0x00, 0x00, 0x00, 0xE8, 0x80,
  0x30, 0x06, 0x46, 0x5A, 0xEB, 0x01, 0xE9, 0xD4, 0x09, 0x49, 0x7F, 0xE9,
  0x67, 0xE3, 0x02, 0xCD, 0x20, 0x14, 0xC9, 0xD9, 0xC9, 0xC0, 0x7C, 0x39,
  0x03, 0x8E, 0x43, 0xC1, 0x75, 0xEE, 0xB5 };

const gtuint8 EXT_PE_053 [79] = {
  0x60, 0xF8, 0xE8, 0x02, 0x00, 0x00, 0x00, 0xE8, 0x00, 0xE8, 0x00, 0x00,
  0x00, 0x00, 0x5E, 0x2B, 0xC9, 0x58, 0x74, 0x02, 0xCD, 0x20, 0xB9, 0x51,
  0x19, 0x00, 0x00, 0x8B, 0xC1, 0xF8, 0x73, 0x02, 0xCD, 0x20, 0x83, 0xC6,
  0x33, 0x8D, 0x44, 0x81, 0x67, 0xE8, 0x02, 0x00, 0x00, 0x00, 0xE8, 0x80,
  0x30, 0x06, 0x46, 0x5A, 0xEB, 0x01, 0xE9, 0xD4, 0x09, 0x49, 0x7F, 0xE9,
  0x67, 0xE3, 0x02, 0xCD, 0x20, 0x14, 0xC9, 0xD9, 0xC9, 0xC0, 0x7C, 0x39,
  0x87, 0x0A, 0xC7, 0x44, 0xF0, 0x69, 0x32 };

const gtuint8 EXT_PE_054 [80] = {
  0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x43, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x4C, 0x6F, 0x61, 0x64, 0x4C, 0x69, 0x62, 0x72,
  0x61, 0x72, 0x79, 0x41, 0x00, 0x00, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
  0x6C, 0x41, 0x6C, 0x6C, 0x6F, 0x63, 0x00, 0x4B };

const gtuint8 EXT_PE_055 [80] = {
  0x55, 0x8B, 0xEC, 0x81, 0xEC, 0x00, 0x01, 0x00, 0x00, 0x56, 0x57, 0x6A,
  0x01, 0x5F, 0x39, 0x7D, 0x0C, 0x0F, 0x85, 0xB0, 0x00, 0x00, 0x00, 0x8B,
  0x75, 0x08, 0xC7, 0x05, 0xF0, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x89, 0x35, 0x08, 0x00, 0x00, 0x00, 0x89, 0x35, 0xE0, 0x00, 0x00, 0x00,
  0xE8, 0x0E, 0x08, 0x00, 0x00, 0x3B, 0xC7, 0x75, 0x28, 0xA1, 0x0C, 0x00,
  0x00, 0x00, 0x85, 0xC0, 0x0F, 0x84, 0xA1, 0x00, 0x00, 0x00, 0xFF, 0x75,
  0x10, 0x57, 0x56, 0xFF, 0xD0, 0x85, 0xC0, 0x0F };

const gtuint8 EXT_PE_056 [80] = {
  0x55, 0x8B, 0xEC, 0x81, 0xEC, 0x00, 0x01, 0x00, 0x00, 0x56, 0x57, 0x6A,
  0x01, 0x5F, 0x39, 0x7D, 0x0C, 0x0F, 0x85, 0xB0, 0x00, 0x00, 0x00, 0x8B,
  0x75, 0x08, 0xC7, 0x05, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x89, 0x35, 0x18, 0x00, 0x00, 0x00, 0x89, 0x35, 0xF0, 0x00, 0x00, 0x00,
  0xE8, 0x0E, 0x08, 0x00, 0x00, 0x3B, 0xC7, 0x75, 0x28, 0xA1, 0x1C, 0x00,
  0x00, 0x00, 0x85, 0xC0, 0x0F, 0x84, 0xA1, 0x00, 0x00, 0x00, 0xFF, 0x75,
  0x10, 0x57, 0x56, 0xFF, 0xD0, 0x85, 0xC0, 0x0F };

const gtuint8 EXT_PE_057 [79] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xE0, 0xF1, 0x40, 0x00, 0x68, 0xE4,
  0xA0, 0x40, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89,
  0x25, 0x00, 0x00, 0x00, 0x00, 0x81, 0xC4, 0x84, 0xF9, 0xFF, 0xFF, 0x53,
  0x56, 0x57, 0x89, 0x65, 0xE8, 0xE8, 0x80, 0x1C, 0x00, 0x00, 0x25, 0xFF,
  0x00, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x11, 0xC7, 0x05, 0xA4, 0x24, 0x41,
  0x00, 0x0C, 0x00, 0x00, 0x00, 0x33, 0xC0, 0xE9, 0xEC, 0x0E, 0x00, 0x00,
  0x6A, 0x01, 0xFF, 0x15, 0xA8, 0xF0, 0x40 };

const gtuint8 EXT_PE_058 [79] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xF0, 0xF1, 0x40, 0x00, 0x68, 0xC4,
  0xA0, 0x40, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89,
  0x25, 0x00, 0x00, 0x00, 0x00, 0x81, 0xC4, 0x84, 0xF9, 0xFF, 0xFF, 0x53,
  0x56, 0x57, 0x89, 0x65, 0xE8, 0xE8, 0x80, 0x1C, 0x00, 0x00, 0x25, 0xFF,
  0x00, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x11, 0xC7, 0x05, 0x94, 0x24, 0x41,
  0x00, 0x0C, 0x00, 0x00, 0x00, 0x33, 0xC0, 0xE9, 0xEC, 0x0E, 0x00, 0x00,
  0x6A, 0x01, 0xFF, 0x15, 0xA8, 0xF0, 0x40 };

const gtuint8 EXT_PE_059 [79] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xE0, 0x01, 0x41, 0x00, 0x68, 0xE4,
  0xA0, 0x40, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89,
  0x25, 0x00, 0x00, 0x00, 0x00, 0x81, 0xC4, 0x84, 0xF9, 0xFF, 0xFF, 0x53,
  0x56, 0x57, 0x89, 0x65, 0xE8, 0xE8, 0x80, 0x1C, 0x00, 0x00, 0x25, 0xFF,
  0x00, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x11, 0xC7, 0x05, 0xC4, 0x54, 0x41,
  0x00, 0x0C, 0x00, 0x00, 0x00, 0x33, 0xC0, 0xE9, 0xEC, 0x0E, 0x00, 0x00,
  0x6A, 0x01, 0xFF, 0x15, 0xA8, 0x00, 0x41 };

const gtuint8 EXT_PE_060 [79] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xF0, 0x01, 0x41, 0x00, 0x68, 0xC4,
  0xA0, 0x40, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89,
  0x25, 0x00, 0x00, 0x00, 0x00, 0x81, 0xC4, 0x84, 0xF9, 0xFF, 0xFF, 0x53,
  0x56, 0x57, 0x89, 0x65, 0xE8, 0xE8, 0x80, 0x1C, 0x00, 0x00, 0x25, 0xFF,
  0x00, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x11, 0xC7, 0x05, 0xC4, 0x54, 0x41,
  0x00, 0x0C, 0x00, 0x00, 0x00, 0x33, 0xC0, 0xE9, 0xEC, 0x0E, 0x00, 0x00,
  0x6A, 0x01, 0xFF, 0x15, 0xA8, 0x00, 0x41 };

const gtuint8 EXT_PE_061 [79] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xE8, 0x01, 0x41, 0x00, 0x68, 0x34,
  0x9A, 0x40, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89,
  0x25, 0x00, 0x00, 0x00, 0x00, 0x81, 0xC4, 0x98, 0xF9, 0xFF, 0xFF, 0x53,
  0x56, 0x57, 0x89, 0x65, 0xE8, 0xE8, 0xF4, 0x19, 0x00, 0x00, 0x25, 0xFF,
  0x00, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x11, 0xC7, 0x05, 0xA4, 0x54, 0x41,
  0x00, 0x0C, 0x00, 0x00, 0x00, 0x33, 0xC0, 0xE9, 0x61, 0x0C, 0x00, 0x00,
  0x6A, 0x01, 0xFF, 0x15, 0xA8, 0x00, 0x41 };

const gtuint8 EXT_PE_062 [79] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xF8, 0x01, 0x41, 0x00, 0x68, 0x04,
  0x9A, 0x40, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89,
  0x25, 0x00, 0x00, 0x00, 0x00, 0x81, 0xC4, 0x98, 0xF9, 0xFF, 0xFF, 0x53,
  0x56, 0x57, 0x89, 0x65, 0xE8, 0xE8, 0xF4, 0x19, 0x00, 0x00, 0x25, 0xFF,
  0x00, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x11, 0xC7, 0x05, 0x84, 0x54, 0x41,
  0x00, 0x0C, 0x00, 0x00, 0x00, 0x33, 0xC0, 0xE9, 0x61, 0x0C, 0x00, 0x00,
  0x6A, 0x01, 0xFF, 0x15, 0xA8, 0x00, 0x41 };

const gtuint8 EXT_PE_063 [80] = {
  0x55, 0x8B, 0xEC, 0x81, 0xEC, 0x60, 0x06, 0x00, 0x00, 0x8B, 0x45, 0x0C,
  0x25, 0xFF, 0x00, 0x00, 0x00, 0x85, 0xC0, 0x74, 0x3A, 0xC7, 0x45, 0xFC,
  0x00, 0x00, 0x00, 0x00, 0xEB, 0x09, 0x8B, 0x4D, 0xFC, 0x83, 0xC1, 0x01,
  0x89, 0x4D, 0xFC, 0x83, 0x7D, 0xFC, 0x0A, 0x7D, 0x1D, 0x68, 0xE8, 0x03,
  0x00, 0x00, 0xFF, 0x15, 0x60, 0x10, 0x41, 0x00, 0x8B, 0x55, 0x08, 0x52,
  0xFF, 0x15, 0x5C, 0x10, 0x41, 0x00, 0x85, 0xC0, 0x74, 0x02, 0xEB, 0x02,
  0xEB, 0xD4, 0xE9, 0xE6, 0x00, 0x00, 0x00, 0x68 };

const gtuint8 EXT_PE_064 [80] = {
  0x55, 0x8B, 0xEC, 0x81, 0xEC, 0x60, 0x06, 0x00, 0x00, 0x8B, 0x45, 0x0C,
  0x25, 0xFF, 0x00, 0x00, 0x00, 0x85, 0xC0, 0x74, 0x3A, 0xC7, 0x45, 0xFC,
  0x00, 0x00, 0x00, 0x00, 0xEB, 0x09, 0x8B, 0x4D, 0xFC, 0x83, 0xC1, 0x01,
  0x89, 0x4D, 0xFC, 0x83, 0x7D, 0xFC, 0x0A, 0x7D, 0x1D, 0x68, 0xE8, 0x03,
  0x00, 0x00, 0xFF, 0x15, 0x60, 0x10, 0x41, 0x00, 0x8B, 0x55, 0x08, 0x52,
  0xFF, 0x15, 0x5C, 0x10, 0x41, 0x00, 0x85, 0xC0, 0x74, 0x02, 0xEB, 0x02,
  0xEB, 0xD4, 0xE9, 0xE6, 0x00, 0x00, 0x00, 0x68 };

const gtuint8 EXT_PE_065 [80] = {
  0x55, 0x8B, 0xEC, 0xB8, 0xF8, 0x00, 0x00, 0x00, 0x5D, 0xC3, 0x55, 0x8B,
  0xEC, 0x83, 0xEC, 0x4C, 0xC7, 0x05, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xC7, 0x05, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6A, 0x01, 0xFF, 0x15, 0xA4, 0x00, 0x00, 0x00, 0x50, 0xE8, 0x52, 0x02,
  0x00, 0x00, 0x83, 0xC4, 0x08, 0xA1, 0x4C, 0x00, 0x00, 0x00, 0x33, 0x05,
  0x48, 0x00, 0x00, 0x00, 0x33, 0x05, 0x50, 0x00, 0x00, 0x00, 0x83, 0xE0,
  0x03, 0x50, 0xE8, 0x40, 0xF4, 0xFF, 0xFF, 0x83 };

const gtuint8 EXT_PE_066 [80] = {
  0x55, 0x8B, 0xEC, 0xA1, 0xB8, 0x00, 0x00, 0x00, 0x8B, 0x04, 0x85, 0xC8,
  0x00, 0x00, 0x00, 0x5D, 0xC3, 0x55, 0x8B, 0xEC, 0xB8, 0xBC, 0x00, 0x00,
  0x00, 0x5D, 0xC3, 0x55, 0x8B, 0xEC, 0x81, 0xEC, 0x58, 0x01, 0x00, 0x00,
  0xA1, 0xA0, 0x00, 0x00, 0x00, 0x33, 0x05, 0xC0, 0x00, 0x00, 0x00, 0x33,
  0x05, 0xA4, 0x00, 0x00, 0x00, 0x83, 0xE0, 0x10, 0x85, 0xC0, 0x0F, 0x84,
  0x30, 0x01, 0x00, 0x00, 0x8B, 0x0D, 0xC4, 0x00, 0x00, 0x00, 0x33, 0x0D,
  0xB4, 0x00, 0x00, 0x00, 0x51, 0xFF, 0x15, 0xF4 };

const gtuint8 EXT_PE_067 [80] = {
  0x55, 0x8B, 0xEC, 0xB8, 0xCC, 0x00, 0x00, 0x00, 0x5D, 0xC3, 0x55, 0x8B,
  0xEC, 0x81, 0xEC, 0x58, 0x01, 0x00, 0x00, 0xA1, 0x4C, 0x00, 0x00, 0x00,
  0x33, 0x05, 0x6C, 0x00, 0x00, 0x00, 0x33, 0x05, 0x50, 0x00, 0x00, 0x00,
  0x83, 0xE0, 0x10, 0x85, 0xC0, 0x0F, 0x84, 0x30, 0x01, 0x00, 0x00, 0x8B,
  0x0D, 0x70, 0x00, 0x00, 0x00, 0x33, 0x0D, 0x60, 0x00, 0x00, 0x00, 0x51,
  0xFF, 0x15, 0xF4, 0x00, 0x00, 0x00, 0x50, 0x68, 0x90, 0x00, 0x00, 0x00,
  0x8D, 0x95, 0xB4, 0xFE, 0xFF, 0xFF, 0x52, 0xE8 };

const gtuint8 EXT_PE_068 [80] = {
  0x55, 0x8B, 0xEC, 0xA1, 0x18, 0x00, 0x00, 0x00, 0x8B, 0x04, 0x85, 0xCC,
  0x00, 0x00, 0x00, 0x5D, 0xC3, 0x55, 0x8B, 0xEC, 0xB8, 0x1C, 0x00, 0x00,
  0x00, 0x5D, 0xC3, 0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0xA8, 0x00, 0x00,
  0x00, 0x68, 0x58, 0x00, 0x00, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00,
  0x50, 0x64, 0x89, 0x25, 0x00, 0x00, 0x00, 0x00, 0x81, 0xC4, 0x24, 0xF9,
  0xFF, 0xFF, 0x53, 0x56, 0x57, 0x89, 0x65, 0xE8, 0xC6, 0x45, 0xAC, 0x01,
  0xA1, 0x90, 0x00, 0x00, 0x00, 0x33, 0x05, 0xB4 };

const gtuint8 EXT_PE_069 [80] = {
  0x55, 0x8B, 0xEC, 0xB8, 0x2C, 0x00, 0x00, 0x00, 0x5D, 0xC3, 0x55, 0x8B,
  0xEC, 0x6A, 0xFF, 0x68, 0xA8, 0x00, 0x00, 0x00, 0x68, 0xF8, 0x00, 0x00,
  0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89, 0x25, 0x00,
  0x00, 0x00, 0x00, 0x81, 0xC4, 0x24, 0xF9, 0xFF, 0xFF, 0x53, 0x56, 0x57,
  0x89, 0x65, 0xE8, 0xC6, 0x45, 0xAC, 0x01, 0xA1, 0x3C, 0x00, 0x00, 0x00,
  0x33, 0x05, 0x60, 0x00, 0x00, 0x00, 0x50, 0xFF, 0x15, 0x38, 0x00, 0x00,
  0x00, 0x50, 0x68, 0x94, 0x00, 0x00, 0x00, 0x8D };

const gtuint8 EXT_PE_070 [79] = {
  0x55, 0x8B, 0xEC, 0xA1, 0x6C, 0x00, 0x00, 0x00, 0x8B, 0x04, 0x85, 0xCC,
  0x00, 0x00, 0x00, 0x5D, 0xC3, 0x55, 0x8B, 0xEC, 0xB8, 0x70, 0x00, 0x00,
  0x00, 0x5D, 0xC3, 0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x40, 0xA1, 0x9C, 0x00,
  0x00, 0x00, 0x33, 0x05, 0x8C, 0x00, 0x00, 0x00, 0x33, 0x05, 0xC0, 0x00,
  0x00, 0x00, 0x83, 0xE0, 0x03, 0x50, 0xE8, 0xE5, 0xF1, 0xFF, 0xFF, 0x83,
  0xC4, 0x04, 0xE8, 0x18, 0x02, 0x00, 0x00, 0x89, 0x45, 0xC8, 0x83, 0x7D,
  0xC8, 0x00, 0x75, 0x11, 0xC7, 0x05, 0x6C };

const gtuint8 EXT_PE_071 [79] = {
  0x55, 0x8B, 0xEC, 0xB8, 0x70, 0x00, 0x00, 0x00, 0x5D, 0xC3, 0x55, 0x8B,
  0xEC, 0x83, 0xEC, 0x40, 0xA1, 0x48, 0x00, 0x00, 0x00, 0x33, 0x05, 0x38,
  0x00, 0x00, 0x00, 0x33, 0x05, 0x6C, 0x00, 0x00, 0x00, 0x83, 0xE0, 0x03,
  0x50, 0xE8, 0x35, 0xF4, 0xFF, 0xFF, 0x83, 0xC4, 0x04, 0xE8, 0x18, 0x02,
  0x00, 0x00, 0x89, 0x45, 0xC8, 0x83, 0x7D, 0xC8, 0x00, 0x75, 0x11, 0xC7,
  0x05, 0x6C, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x33, 0xC0, 0xE9,
  0xFA, 0x01, 0x00, 0x00, 0xC6, 0x45, 0xD0 };

const gtuint8 EXT_PE_072 [79] = {
  0x55, 0x8B, 0xEC, 0xA1, 0x2C, 0x00, 0x00, 0x00, 0x8B, 0x04, 0x85, 0xCC,
  0x00, 0x00, 0x00, 0x5D, 0xC3, 0x55, 0x8B, 0xEC, 0xB8, 0x30, 0x00, 0x00,
  0x00, 0x5D, 0xC3, 0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x40, 0xA1, 0x98, 0x00,
  0x00, 0x00, 0x33, 0x05, 0xA0, 0x00, 0x00, 0x00, 0x33, 0x05, 0xC0, 0x00,
  0x00, 0x00, 0x83, 0xE0, 0x03, 0x50, 0xE8, 0xD5, 0xF1, 0xFF, 0xFF, 0x83,
  0xC4, 0x04, 0xE8, 0x18, 0x02, 0x00, 0x00, 0x89, 0x45, 0xC8, 0x83, 0x7D,
  0xC8, 0x00, 0x75, 0x11, 0xC7, 0x05, 0x2C };

const gtuint8 EXT_PE_073 [79] = {
  0x55, 0x8B, 0xEC, 0xB8, 0x30, 0x00, 0x00, 0x00, 0x5D, 0xC3, 0x55, 0x8B,
  0xEC, 0x83, 0xEC, 0x40, 0xA1, 0x44, 0x00, 0x00, 0x00, 0x33, 0x05, 0x4C,
  0x00, 0x00, 0x00, 0x33, 0x05, 0x6C, 0x00, 0x00, 0x00, 0x83, 0xE0, 0x03,
  0x50, 0xE8, 0x35, 0xF4, 0xFF, 0xFF, 0x83, 0xC4, 0x04, 0xE8, 0x18, 0x02,
  0x00, 0x00, 0x89, 0x45, 0xC8, 0x83, 0x7D, 0xC8, 0x00, 0x75, 0x11, 0xC7,
  0x05, 0x2C, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x33, 0xC0, 0xE9,
  0xFA, 0x01, 0x00, 0x00, 0xC6, 0x45, 0xD0 };

const gtuint8 EXT_PE_074 [79] = {
  0x55, 0x8B, 0xEC, 0xA1, 0x2C, 0x00, 0x00, 0x00, 0x8B, 0x04, 0x85, 0xCC,
  0x00, 0x00, 0x00, 0x5D, 0xC3, 0x55, 0x8B, 0xEC, 0xB8, 0x30, 0x00, 0x00,
  0x00, 0x5D, 0xC3, 0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x40, 0xA1, 0xBC, 0x00,
  0x00, 0x00, 0x33, 0x05, 0xC4, 0x00, 0x00, 0x00, 0x33, 0x05, 0x9C, 0x00,
  0x00, 0x00, 0x83, 0xE0, 0x03, 0x50, 0xE8, 0xD5, 0xF1, 0xFF, 0xFF, 0x83,
  0xC4, 0x04, 0xE8, 0x18, 0x02, 0x00, 0x00, 0x89, 0x45, 0xC8, 0x83, 0x7D,
  0xC8, 0x00, 0x75, 0x11, 0xC7, 0x05, 0x2C };

const gtuint8 EXT_PE_075 [79] = {
  0x55, 0x8B, 0xEC, 0xB8, 0x30, 0x00, 0x00, 0x00, 0x5D, 0xC3, 0x55, 0x8B,
  0xEC, 0x83, 0xEC, 0x40, 0xA1, 0x68, 0x00, 0x00, 0x00, 0x33, 0x05, 0x70,
  0x00, 0x00, 0x00, 0x33, 0x05, 0x48, 0x00, 0x00, 0x00, 0x83, 0xE0, 0x03,
  0x50, 0xE8, 0x35, 0xF4, 0xFF, 0xFF, 0x83, 0xC4, 0x04, 0xE8, 0x18, 0x02,
  0x00, 0x00, 0x89, 0x45, 0xC8, 0x83, 0x7D, 0xC8, 0x00, 0x75, 0x11, 0xC7,
  0x05, 0x2C, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x33, 0xC0, 0xE9,
  0xFA, 0x01, 0x00, 0x00, 0xC6, 0x45, 0xD0 };

const gtuint8 EXT_PE_076 [80] = {
  0x50, 0x44, 0x41, 0x54, 0x41, 0x30, 0x30, 0x30, 0x01, 0x00, 0x00, 0xC0,
  0x03, 0x00, 0x4F, 0x12, 0x02, 0x00, 0x78, 0x01, 0xEC, 0xBD, 0x7D, 0x7C,
  0x53, 0x45, 0xF6, 0x3F, 0x7E, 0xF3, 0xD0, 0x36, 0x40, 0xDA, 0x04, 0x6C,
  0xB1, 0x60, 0x91, 0xAA, 0x55, 0xD1, 0x22, 0x22, 0x01, 0x69, 0x4D, 0x8B,
  0xE5, 0x21, 0xA5, 0x28, 0xC5, 0xD4, 0x42, 0x4A, 0x80, 0x02, 0xAE, 0xD0,
  0x0D, 0x11, 0x9F, 0x20, 0x01, 0x54, 0x0A, 0xE9, 0xA6, 0xD1, 0xA6, 0x97,
  0x08, 0xAC, 0xA8, 0xB8, 0xCA, 0x2E, 0x88, 0xAB };

const gtuint8 EXT_PE_077 [80] = {
  0x50, 0x44, 0x41, 0x54, 0x41, 0x30, 0x30, 0x30, 0x01, 0x00, 0x00, 0x20,
  0x03, 0x00, 0x2F, 0xC7, 0x01, 0x00, 0x78, 0x01, 0xEC, 0xBD, 0x7B, 0x5C,
  0x94, 0xD5, 0xF6, 0x3F, 0xFE, 0xCC, 0x05, 0x18, 0x75, 0x70, 0xC6, 0x04,
  0xC3, 0x44, 0xC3, 0x24, 0xB3, 0x28, 0x23, 0x51, 0x03, 0x07, 0x15, 0x2F,
  0x83, 0x58, 0x62, 0x43, 0x08, 0x38, 0x29, 0x6A, 0xA5, 0x9C, 0x69, 0x32,
  0xF3, 0xE8, 0x8C, 0x59, 0x81, 0x0E, 0x67, 0x18, 0xE3, 0xE1, 0x71, 0x4C,
  0x4B, 0x4D, 0x3F, 0x65, 0xE9, 0xB1, 0x8B, 0x5D };

const gtuint8 EXT_PE_078 [80] = {
  0x50, 0x44, 0x41, 0x54, 0x41, 0x30, 0x30, 0x30, 0x01, 0x00, 0x00, 0x20,
  0x03, 0x00, 0xF2, 0xC7, 0x01, 0x00, 0x78, 0x01, 0xEC, 0xBD, 0x7D, 0x5C,
  0x54, 0xD5, 0xF6, 0x3F, 0x7E, 0xE6, 0x01, 0x18, 0x75, 0x60, 0x46, 0x05,
  0xA3, 0xC4, 0x24, 0x25, 0xD3, 0xB0, 0x22, 0xD1, 0x04, 0x07, 0x14, 0x1F,
  0x06, 0xB1, 0xA4, 0x86, 0x08, 0x70, 0x52, 0xD0, 0x4A, 0x69, 0x9A, 0xAC,
  0x4C, 0x67, 0xCC, 0xBA, 0xA0, 0x43, 0xC3, 0x18, 0xC3, 0x71, 0xCC, 0xBA,
  0x3E, 0xE4, 0xBD, 0x59, 0x9A, 0xF6, 0xDC, 0xFD };

const gtuint8 EXT_PE_079 [44] = {
  0x4B, 0x45, 0x52, 0x4E, 0x45, 0x4C, 0x33, 0x32, 0x2E, 0x64, 0x6C, 0x6C,
  0x00, 0x00, 0x4C, 0x6F, 0x61, 0x64, 0x4C, 0x69, 0x62, 0x72, 0x61, 0x72,
  0x79, 0x41, 0x00, 0x00, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6F, 0x63, 0x41,
  0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x00, 0xC1 };

const gtuint8 EXT_PE_080 [42] = {
  0x4B, 0x45, 0x52, 0x4E, 0x45, 0x4C, 0x33, 0x32, 0x2E, 0x64, 0x6C, 0x6C,
  0x00, 0x00, 0x4C, 0x6F, 0x61, 0x64, 0x4C, 0x69, 0x62, 0x72, 0x61, 0x72,
  0x79, 0x41, 0x00, 0x00, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6F, 0x63, 0x41,
  0x64, 0x64, 0x72, 0x65, 0x73, 0x73 };

// 81 was FSG 1.3 - strange one...

const gtuint8 EXT_PE_082 [80] = {
  0x55, 0x8B, 0xEC, 0x6A, 0xFF, 0x68, 0x00, 0x00, 0x42, 0x00, 0x68, 0xA4,
  0x11, 0x41, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50, 0x64, 0x89,
  0x25, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC4, 0xE0, 0x53, 0x56, 0x57, 0x89,
  0x65, 0xE8, 0xB8, 0x94, 0x00, 0x00, 0x00, 0xE8, 0xF0, 0x00, 0x00, 0x00,
  0x89, 0x65, 0xD0, 0x89, 0x65, 0xE8, 0x8B, 0x45, 0xD0, 0x89, 0x45, 0xDC,
  0x8B, 0x4D, 0xDC, 0xC7, 0x01, 0x94, 0x00, 0x00, 0x00, 0x8B, 0x55, 0xDC,
  0x52, 0xFF, 0x15, 0x00, 0x00, 0x42, 0x00, 0x8B };

const gtuint8 EXT_PE_083 [80] = {
  0xB8, 0x00, 0x00, 0x00, 0x00, 0xB9, 0x10, 0x00, 0x00, 0x00, 0x80, 0x34,
  0x08, 0x00, 0xE2, 0xFA, 0xB8, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xE0, 0x90,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xFF,
  0xE0, 0x60, 0xE8, 0x03, 0x00, 0x00, 0x00, 0xE9 };

const gtuint8 EXT_PE_084 [79] = {
  0x5D, 0x45, 0x55, 0xC3, 0xE8, 0x01, 0x00, 0x00, 0x00, 0xEB, 0x5D, 0xBB,
  0xED, 0xFF, 0xFF, 0xFF, 0x03, 0xDD, 0x81, 0xEB, 0x00, 0x00, 0x00, 0x00,
  0x83, 0xBD, 0x22, 0x04, 0x00, 0x00, 0x00, 0x89, 0x9D, 0x22, 0x04, 0x00,
  0x00, 0x0F, 0x85, 0x65, 0x03, 0x00, 0x00, 0x8D, 0x85, 0x2E, 0x04, 0x00,
  0x00, 0x50, 0xFF, 0x95, 0x4D, 0x0F, 0x00, 0x00, 0x89, 0x85, 0x26, 0x04,
  0x00, 0x00, 0x8B, 0xF8, 0x8D, 0x5D, 0x5E, 0x53, 0x50, 0xFF, 0x95, 0x49,
  0x0F, 0x00, 0x00, 0x89, 0x85, 0x4D, 0x05 };

// the non-macro version of EXEshield is detected as PECompact
const gtuint8 EXT_PE_085 [50] = {
  0x33, 0xC9, 0x41, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x13, 0xC9, 0xE8, 0xE7,
  0xFF, 0xFF, 0xFF, 0x72, 0xF2, 0xC3, 0x5D, 0x2B, 0x7D, 0x0C, 0x8B, 0xC7,
  0xC9, 0xC2, 0x08, 0x00, 0x00, 0x65, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x00,
  0xE0, 0x99, 0x00, 0x10, 0xE0, 0x99, 0x00, 0xD0, 0xE4, 0x46, 0x00, 0x10,
  0xF0, 0x99 };

// the non-macro version of EXEshield is detected as PECompact
const gtuint8 EXT_PE_086 [50] = {
  0x33, 0xC9, 0x41, 0xE8, 0xEE, 0xFF, 0xFF, 0xFF, 0x13, 0xC9, 0xE8, 0xE7,
  0xFF, 0xFF, 0xFF, 0x72, 0xF2, 0xC3, 0x5D, 0x2B, 0x7D, 0x0C, 0x8B, 0xC7,
  0xC9, 0xC2, 0x08, 0x00, 0x0C, 0x46, 0x6F, 0x6E, 0x74, 0x2E, 0x43, 0x00,
  0xE0, 0x99, 0x00, 0x10, 0xE0, 0x99, 0x00, 0xD0, 0xE4, 0x46, 0x00, 0x10,
  0xF0, 0x99 };

const gtuint8 EXT_PE_087 [80] = {
  0x60, 0xE8, 0x03, 0x00, 0x00, 0x00, 0xE9, 0xEB, 0x04, 0x5D, 0x45, 0x55,
  0xC3, 0xE8, 0x01, 0x00, 0x00, 0x00, 0xEB, 0x5D, 0xBB, 0xED, 0xFF, 0xFF,
  0xFF, 0x03, 0xDD, 0x81, 0xEB, 0x00, 0x00, 0x00, 0x00, 0x83, 0x7D, 0x25,
  0x00, 0x89, 0x5D, 0x25, 0x75, 0x11, 0x8D, 0x45, 0x2A, 0x50, 0x53, 0xFF,
  0xB5, 0x2D, 0x09, 0x00, 0x00, 0xEB, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xB8,
  0x78, 0x56, 0x34, 0x12, 0x50, 0x03, 0x45, 0x25, 0x5B, 0x0B, 0xDB, 0x89,
  0x44, 0x24, 0x1C, 0x61, 0x75, 0x06, 0x6A, 0x01 };

const gtuint8 EXT_PE_088 [68] = {
  0x60, 0xE8, 0x03, 0x00, 0x00, 0x00, 0xE9, 0xEB, 0x04, 0x5D, 0x45, 0x55,
  0xC3, 0xE8, 0x01, 0x00, 0x00, 0x00, 0xEB, 0x5D, 0xBB, 0xED, 0xFF, 0xFF,
  0xFF, 0x03, 0xDD, 0x81, 0xEB, 0x00, 0x00, 0x00, 0x00, 0x80, 0x7D, 0x4D,
  0x01, 0x75, 0x0C, 0x8B, 0x74, 0x24, 0x28, 0x83, 0xFE, 0x01, 0x89, 0x5D,
  0x4E, 0x75, 0x31, 0x8D, 0x45, 0x53, 0x50, 0x53, 0xFF, 0xB5, 0xD5, 0x09,
  0x00, 0x00, 0x8D, 0x45, 0x35, 0x50, 0xE9, 0x82 };

const gtuint8 EXT_PE_089 [80] = {
  0xBB, 0xB4, 0x03, 0x40, 0x00, 0xFC, 0xB2, 0x80, 0x8A, 0x06, 0x46, 0x88,
  0x07, 0x47, 0x02, 0xD2, 0x75, 0x05, 0x8A, 0x16, 0x46, 0x12, 0xD2, 0x73,
  0xEF, 0x02, 0xD2, 0x75, 0x05, 0x8A, 0x16, 0x46, 0x12, 0xD2, 0x73, 0x4A,
  0x33, 0xC0, 0x02, 0xD2, 0x75, 0x05, 0x8A, 0x16, 0x46, 0x12, 0xD2, 0x0F,
  0x83, 0xD6, 0x00, 0x00, 0x00, 0x02, 0xD2, 0x75, 0x05, 0x8A, 0x16, 0x46,
  0x12, 0xD2, 0x13, 0xC0, 0x02, 0xD2, 0x75, 0x05, 0x8A, 0x16, 0x46, 0x12,
  0xD2, 0x13, 0xC0, 0x02, 0xD2, 0x75, 0x05, 0x8A };

const gtuint8 EXT_PE_090 [80] = {
  0xE8, 0x51, 0x00, 0x00, 0x00, 0xE8, 0xEB, 0x08, 0xEB, 0x02, 0xCD, 0x20,
  0xFF, 0x24, 0x24, 0x9A, 0x66, 0xBE, 0x47, 0x46, 0xE8, 0x01, 0x00, 0x00,
  0x00, 0x9A, 0x59, 0x8D, 0x95, 0xCD, 0x25, 0x40, 0x00, 0xE8, 0x01, 0x00,
  0x00, 0x00, 0x69, 0x58, 0x66, 0xBF, 0x4D, 0x4A, 0xE8, 0x2E, 0x00, 0x00,
  0x00, 0x8D, 0x52, 0xF9, 0xE8, 0x01, 0x00, 0x00, 0x00, 0xE8, 0x5B, 0x68,
  0xCC, 0xFF, 0xE2, 0x9A, 0xFF, 0xE4, 0x69, 0xFF, 0xA5, 0xAF, 0x2F, 0x40,
  0x00, 0xE9, 0xE8, 0xB9, 0xFF, 0xFF, 0xFF, 0xEB };

const gtuint8 EXT_PE_091 [80] = {
  0x60, 0xF9, 0xE8, 0x02, 0x00, 0x00, 0x00, 0xE8, 0x00, 0xE8, 0x00, 0x00,
  0x00, 0x00, 0x5E, 0x2B, 0xC9, 0x58, 0x74, 0x02, 0xCD, 0x20, 0xB9, 0x51,
  0x19, 0x00, 0x00, 0x8B, 0xC1, 0xF8, 0x73, 0x02, 0xCD, 0x20, 0x83, 0xC6,
  0x33, 0x8D, 0x44, 0x81, 0x67, 0xE8, 0x02, 0x00, 0x00, 0x00, 0xE8, 0x80,
  0x30, 0x06, 0x46, 0x5A, 0xEB, 0x01, 0xE9, 0xD4, 0x09, 0x49, 0x7F, 0xE9,
  0x67, 0xE3, 0x02, 0xCD, 0x20, 0x14, 0xC9, 0xD9, 0xC9, 0xC0, 0x7C, 0x39,
  0xE7, 0x77, 0xFA, 0x16, 0x97, 0x7B, 0xBC, 0x1C };

const gtuint8 EXT_PE_092 [80] = {
  0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x10, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x83,
  0x65, 0xF8, 0x00, 0x83, 0x65, 0xFC, 0x00, 0x53, 0x57, 0xBF, 0x4E, 0xE6,
  0x40, 0xBB, 0x3B, 0xC7, 0xBB, 0x00, 0x00, 0xFF, 0xFF, 0x74, 0x0D, 0x85,
  0xC3, 0x74, 0x09, 0xF7, 0xD0, 0xA3, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x60,
  0x56, 0x8D, 0x45, 0xF8, 0x50, 0xFF, 0x15, 0x00, 0x00, 0x40, 0x00, 0x8B,
  0x75, 0xFC, 0x33, 0x75, 0xF8, 0xFF, 0x15, 0x00, 0x00, 0x40, 0x00, 0x33,
  0xF0, 0xFF, 0x15, 0x00, 0x00, 0x40, 0x00, 0x33 };

const gtuint8 EXT_PE_093 [80] = {
  0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x10, 0xA1, 0x00, 0x00, 0x00, 0x10, 0x83,
  0x65, 0xF8, 0x00, 0x83, 0x65, 0xFC, 0x00, 0x53, 0x57, 0xBF, 0x4E, 0xE6,
  0x40, 0xBB, 0x3B, 0xC7, 0xBB, 0x00, 0x00, 0xFF, 0xFF, 0x74, 0x0D, 0x85,
  0xC3, 0x74, 0x09, 0xF7, 0xD0, 0xA3, 0x00, 0x00, 0x00, 0x10, 0xEB, 0x60,
  0x56, 0x8D, 0x45, 0xF8, 0x50, 0xFF, 0x15, 0x00, 0x00, 0x00, 0x10, 0x8B,
  0x75, 0xFC, 0x33, 0x75, 0xF8, 0xFF, 0x15, 0x00, 0x00, 0x00, 0x10, 0x33,
  0xF0, 0xFF, 0x15, 0x00, 0x00, 0x00, 0x10, 0x33 };

const gtuint8 EXT_PE_094 [80] = {
  0x8B, 0xFF, 0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x10, 0xA1, 0x00, 0x00, 0x00,
  0x00, 0x83, 0x65, 0xF8, 0x00, 0x83, 0x65, 0xFC, 0x00, 0x53, 0x57, 0xBF,
  0x4E, 0xE6, 0x40, 0xBB, 0xBB, 0x00, 0x00, 0xFF, 0xFF, 0x3B, 0xC7, 0x74,
  0x0D, 0x85, 0xC3, 0x74, 0x09, 0xF7, 0xD0, 0xA3, 0x00, 0x00, 0x00, 0x00,
  0xEB, 0x60, 0x56, 0x8D, 0x45, 0xF8, 0x50, 0xFF, 0x15, 0x00, 0x00, 0x40,
  0x00, 0x8B, 0x75, 0xFC, 0x33, 0x75, 0xF8, 0xFF, 0x15, 0x00, 0x00, 0x40,
  0x00, 0x33, 0xF0, 0xFF, 0x15, 0x00, 0x00, 0x40 };

const gtuint8 EXT_PE_095 [77] = {
  0x8B, 0xFF, 0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x10, 0xA1, 0x00, 0x00, 0x00,
  0x00, 0x83, 0x65, 0xF8, 0x00, 0x83, 0x65, 0xFC, 0x00, 0x53, 0x57, 0xBF,
  0x4E, 0xE6, 0x40, 0xBB, 0xBB, 0x00, 0x00, 0xFF, 0xFF, 0x3B, 0xC7, 0x74,
  0x0D, 0x85, 0xC3, 0x74, 0x09, 0xF7, 0xD0, 0xA3, 0x00, 0x00, 0x00, 0x00,
  0xEB, 0x60, 0x56, 0x8D, 0x45, 0xF8, 0x50, 0xFF, 0x15, 0x00, 0x00, 0x00,
  0x00, 0x8B, 0x75, 0xFC, 0x33, 0x75, 0xF8, 0xFF, 0x15, 0x00, 0x00, 0x00,
  0x00, 0x33, 0xF0, 0xFF, 0x15 };

const gtuint8 EXT_PE_096 [78] = {
  0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x14, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x83,
  0x65, 0xF4, 0x00, 0x83, 0x65, 0xF8, 0x00, 0x56, 0x57, 0xBF, 0x4E, 0xE6,
  0x40, 0xBB, 0xBE, 0x00, 0x00, 0xFF, 0xFF, 0x3B, 0xC7, 0x74, 0x0D, 0x85,
  0xC6, 0x74, 0x09, 0xF7, 0xD0, 0xA3, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x66,
  0x8D, 0x45, 0xF4, 0x50, 0xFF, 0x15, 0x00, 0x00, 0x40, 0x00, 0x8B, 0x45,
  0xF8, 0x33, 0x45, 0xF4, 0x89, 0x45, 0xFC, 0xFF, 0x15, 0x00, 0x00, 0x40,
  0x00, 0x31, 0x45, 0xFC, 0xFF, 0x15 };

const gtuint8 EXT_PE_097 [78] = {
  0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x14, 0xA1, 0x00, 0x00, 0x00, 0x10, 0x83,
  0x65, 0xF4, 0x00, 0x83, 0x65, 0xF8, 0x00, 0x56, 0x57, 0xBF, 0x4E, 0xE6,
  0x40, 0xBB, 0xBE, 0x00, 0x00, 0xFF, 0xFF, 0x3B, 0xC7, 0x74, 0x0D, 0x85,
  0xC6, 0x74, 0x09, 0xF7, 0xD0, 0xA3, 0x00, 0x00, 0x00, 0x10, 0xEB, 0x66,
  0x8D, 0x45, 0xF4, 0x50, 0xFF, 0x15, 0x00, 0x00, 0x00, 0x10, 0x8B, 0x45,
  0xF8, 0x33, 0x45, 0xF4, 0x89, 0x45, 0xFC, 0xFF, 0x15, 0x00, 0x00, 0x00,
  0x10, 0x31, 0x45, 0xFC, 0xFF, 0x15 };

const gtuint8 EXT_PE_098 [80] = {
  0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x14, 0xC7, 0x45, 0xF4, 0x00, 0x00, 0x00,
  0x00, 0xC7, 0x45, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x81, 0x3D, 0x00, 0x00,
  0x00, 0x10, 0x4E, 0xE6, 0x40, 0xBB, 0x74, 0x1F, 0xA1, 0x00, 0x00, 0x00,
  0x10, 0x25, 0x00, 0x00, 0xFF, 0xFF, 0x74, 0x13, 0x8B, 0x0D, 0x00, 0x00,
  0x00, 0x10, 0xF7, 0xD1, 0x89, 0x0D, 0x00, 0x00, 0x00, 0x10, 0xE9, 0x9A,
  0x00, 0x00, 0x00, 0x8D, 0x55, 0xF4, 0x52, 0xFF, 0x15, 0x00, 0x00, 0x00,
  0x10, 0x8B, 0x45, 0xF4, 0x89, 0x45, 0xFC, 0x8B };

const gtuint8 EXT_PE_099 [79] = {
  0x8B, 0xFF, 0x55, 0x8B, 0xEC, 0x6A, 0xFE, 0x68, 0x00, 0x00, 0x00, 0x10,
  0x68, 0x00, 0x00, 0x00, 0x10, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x50,
  0x83, 0xC4, 0xF0, 0x53, 0x56, 0x57, 0xA1, 0x00, 0x00, 0x00, 0x10, 0x31,
  0x45, 0xF8, 0x33, 0xC5, 0x50, 0x8D, 0x45, 0xF0, 0x64, 0xA3, 0x00, 0x00,
  0x00, 0x00, 0x89, 0x65, 0xE8, 0xC7, 0x45, 0xE4, 0x01, 0x00, 0x00, 0x00,
  0xC7, 0x45, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x45, 0x0C, 0xA3, 0x00,
  0x00, 0x00, 0x10, 0xC7, 0x45, 0xFC, 0x01 };

const gtuint8 EXT_PE_100 [77] = {
  0x8B, 0xFF, 0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x10, 0xA1, 0x00, 0x00, 0x00,
  0x10, 0x83, 0x65, 0xF8, 0x00, 0x83, 0x65, 0xFC, 0x00, 0x53, 0x57, 0xBF,
  0x4E, 0xE6, 0x40, 0xBB, 0xBB, 0x00, 0x00, 0xFF, 0xFF, 0x3B, 0xC7, 0x74,
  0x0D, 0x85, 0xC3, 0x74, 0x09, 0xF7, 0xD0, 0xA3, 0x00, 0x00, 0x00, 0x10,
  0xEB, 0x65, 0x56, 0x8D, 0x45, 0xF8, 0x50, 0xFF, 0x15, 0x00, 0x00, 0x00,
  0x10, 0x8B, 0x75, 0xFC, 0x33, 0x75, 0xF8, 0xFF, 0x15, 0x00, 0x00, 0x00,
  0x10, 0x33, 0xF0, 0xFF, 0x15 };

const gtuint8 EXT_PE_101 [80] = {
  0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x14, 0xC7, 0x45, 0xF4, 0x00, 0x00, 0x00,
  0x00, 0xC7, 0x45, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x81, 0x3D, 0x00, 0x00,
  0x00, 0x00, 0x4E, 0xE6, 0x40, 0xBB, 0x74, 0x1F, 0xA1, 0x00, 0x00, 0x00,
  0x00, 0x25, 0x00, 0x00, 0xFF, 0xFF, 0x74, 0x13, 0x8B, 0x0D, 0x00, 0x00,
  0x00, 0x00, 0xF7, 0xD1, 0x89, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xE9, 0x9A,
  0x00, 0x00, 0x00, 0x8D, 0x55, 0xF4, 0x52, 0xFF, 0x15, 0x00, 0x00, 0x00,
  0x00, 0x8B, 0x45, 0xF4, 0x89, 0x45, 0xFC, 0x8B };

const gtuint8 EXT_PE_102 [80] = {
  0x8B, 0xFF, 0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x10, 0xA1, 0x00, 0x00, 0x00,
  0x00, 0x83, 0x65, 0xF8, 0x00, 0x83, 0x65, 0xFC, 0x00, 0x53, 0x57, 0xBF,
  0x4E, 0xE6, 0x40, 0xBB, 0xBB, 0x00, 0x00, 0xFF, 0xFF, 0x3B, 0xC7, 0x74,
  0x0D, 0x85, 0xC3, 0x74, 0x09, 0xF7, 0xD0, 0xA3, 0x00, 0x00, 0x00, 0x00,
  0xEB, 0x65, 0x56, 0x8D, 0x45, 0xF8, 0x50, 0xFF, 0x15, 0x00, 0x00, 0x40,
  0x00, 0x8B, 0x75, 0xFC, 0x33, 0x75, 0xF8, 0xFF, 0x15, 0x00, 0x00, 0x40,
  0x00, 0x33, 0xF0, 0xFF, 0x15, 0x00, 0x00, 0x40 };

const gtuint8 EXT_PE_103 [80] = {
  0x8B, 0xFF, 0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x18, 0xC7, 0x45, 0xF8, 0x00,
  0x00, 0x00, 0x00, 0xC7, 0x45, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x81, 0x3D,
  0x00, 0x00, 0x00, 0x00, 0x4E, 0xE6, 0x40, 0xBB, 0x74, 0x1F, 0xA1, 0x00,
  0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0xFF, 0xFF, 0x74, 0x13, 0x8B, 0x0D,
  0x00, 0x00, 0x00, 0x00, 0xF7, 0xD1, 0x89, 0x0D, 0x00, 0x00, 0x00, 0x00,
  0xE9, 0x9B, 0x00, 0x00, 0x00, 0x8D, 0x55, 0xF8, 0x52, 0xFF, 0x15, 0x00,
  0x00, 0x00, 0x00, 0x8B, 0x45, 0xF8, 0x89, 0x45 };

const gtuint8 EXT_PE_104 [80] = {
  0x8B, 0xFF, 0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x18, 0xC7, 0x45, 0xF8, 0x00,
  0x00, 0x00, 0x00, 0xC7, 0x45, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x81, 0x3D,
  0x00, 0x00, 0x00, 0x10, 0x4E, 0xE6, 0x40, 0xBB, 0x74, 0x1F, 0xA1, 0x00,
  0x00, 0x00, 0x10, 0x25, 0x00, 0x00, 0xFF, 0xFF, 0x74, 0x13, 0x8B, 0x0D,
  0x00, 0x00, 0x00, 0x10, 0xF7, 0xD1, 0x89, 0x0D, 0x00, 0x00, 0x00, 0x10,
  0xE9, 0x96, 0x00, 0x00, 0x00, 0x8D, 0x55, 0xF8, 0x52, 0xFF, 0x15, 0x00,
  0x00, 0x00, 0x10, 0x8B, 0x45, 0xF8, 0x89, 0x45 };

const gtuint8 EXT_PE_105 [80] = {
  0x8B, 0xFF, 0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x18, 0xC7, 0x45, 0xF8, 0x00,
  0x00, 0x00, 0x00, 0xC7, 0x45, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x81, 0x3D,
  0x00, 0x00, 0x00, 0x00, 0x4E, 0xE6, 0x40, 0xBB, 0x74, 0x1F, 0xA1, 0x00,
  0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0xFF, 0xFF, 0x74, 0x13, 0x8B, 0x0D,
  0x00, 0x00, 0x00, 0x00, 0xF7, 0xD1, 0x89, 0x0D, 0x00, 0x00, 0x00, 0x00,
  0xE9, 0x96, 0x00, 0x00, 0x00, 0x8D, 0x55, 0xF8, 0x52, 0xFF, 0x15, 0x00,
  0x00, 0x00, 0x00, 0x8B, 0x45, 0xF8, 0x89, 0x45 };

const gtuint8 EXT_PE_106 [80] = {
  0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x18, 0xC7, 0x45, 0xF8, 0x00, 0x00, 0x00,
  0x00, 0xC7, 0x45, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x81, 0x3D, 0x00, 0x00,
  0x00, 0x10, 0x4E, 0xE6, 0x40, 0xBB, 0x74, 0x1F, 0xA1, 0x00, 0x00, 0x00,
  0x10, 0x25, 0x00, 0x00, 0xFF, 0xFF, 0x74, 0x13, 0x8B, 0x0D, 0x00, 0x00,
  0x00, 0x10, 0xF7, 0xD1, 0x89, 0x0D, 0x00, 0x00, 0x00, 0x10, 0xE9, 0x96,
  0x00, 0x00, 0x00, 0x8D, 0x55, 0xF8, 0x52, 0xFF, 0x15, 0x00, 0x00, 0x00,
  0x10, 0x8B, 0x45, 0xF8, 0x89, 0x45, 0xF4, 0x8B };

const gtuint8 EXT_PE_107 [59] = {
  0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x18, 0xC7, 0x45, 0xF8, 0x00, 0x00, 0x00,
  0x00, 0xC7, 0x45, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x81, 0x3D, 0x00, 0x00,
  0x00, 0x00, 0x4E, 0xE6, 0x40, 0xBB, 0x74, 0x1F, 0xA1, 0x00, 0x00, 0x00,
  0x00, 0x25, 0x00, 0x00, 0xFF, 0xFF, 0x74, 0x13, 0x8B, 0x0D, 0x00, 0x00,
  0x00, 0x00, 0xF7, 0xD1, 0x89, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xE9 };

//--------------------------------------------------------------------
ExtEXEEntry aPE_Ext [] =
//--------------------------------------------------------------------
{
{ ENTRY (EXT_PE_083), PE_EXE, PROTECTOR, _T ("AHTeam EP Protector v0.3 ASPack 2.12"), _T ("-23") },
{ ENTRY (EXT_PE_032), PE_EXE, ENCRYPTER, _T ("Armadillo 1.80b3 (console)"),        _T ("175k195k") },
{ ENTRY (EXT_PE_033), PE_EXE, ENCRYPTER, _T ("Armadillo 1.80b3 (gui)"),            _T ("201k188k") },
{ ENTRY (EXT_PE_034), PE_EXE, ENCRYPTER, _T ("Armadillo 1.80 (console)"),          _T ("175k195k") },
{ ENTRY (EXT_PE_035), PE_EXE, ENCRYPTER, _T ("Armadillo 1.80 (gui)"),              _T ("201k188k") },
{ ENTRY (EXT_PE_036), PE_EXE, ENCRYPTER, _T ("Armadillo 1.90b2 (console)"),        _T ("175k474k") },
{ ENTRY (EXT_PE_037), PE_EXE, ENCRYPTER, _T ("Armadillo 1.90b2 (gui)"),            _T ("201k485k") },
{ ENTRY (EXT_PE_038), PE_EXE, ENCRYPTER, _T ("Armadillo 1.90b3 (console)"),        _T ("175k474k") },
{ ENTRY (EXT_PE_039), PE_EXE, ENCRYPTER, _T ("Armadillo 1.90b3 (gui)"),            _T ("201k485k") },
{ ENTRY (EXT_PE_040), PE_EXE, ENCRYPTER, _T ("Armadillo 1.90b4 (console)"),        _T ("175k474k") },
{ ENTRY (EXT_PE_041), PE_EXE, ENCRYPTER, _T ("Armadillo 1.90b4 (gui)"),            _T ("201k485k") },
{ ENTRY (EXT_PE_042), PE_EXE, ENCRYPTER, _T ("Armadillo 1.91c (console)"),         _T ("175k535k") },
{ ENTRY (EXT_PE_043), PE_EXE, ENCRYPTER, _T ("Armadillo 1.91c (gui)"),             _T ("201k542k") },
{ ENTRY (EXT_PE_044), PE_EXE, ENCRYPTER, _T ("Armadillo 2.00b1 (console)"),        _T ("175k535k") },
{ ENTRY (EXT_PE_045), PE_EXE, ENCRYPTER, _T ("Armadillo 2.00b1 (gui)"),            _T ("201k542k") },
{ ENTRY (EXT_PE_057), PE_EXE, ENCRYPTER, _T ("Armadillo 2.00b2/b3 (console)"),     _T ("175k535k") },
{ ENTRY (EXT_PE_058), PE_EXE, ENCRYPTER, _T ("Armadillo 2.00b2/b3 (gui)"),         _T ("201k542k") },
{ ENTRY (EXT_PE_059), PE_EXE, ENCRYPTER, _T ("Armadillo 2.00 (console)"),          _T ("175k535k") },
{ ENTRY (EXT_PE_060), PE_EXE, ENCRYPTER, _T ("Armadillo 2.00 (gui)"),              _T ("201k542k") },
{ ENTRY (EXT_PE_061), PE_EXE, ENCRYPTER, _T ("Armadillo 2.01 (console)"),          _T ("175k535k") },
{ ENTRY (EXT_PE_062), PE_EXE, ENCRYPTER, _T ("Armadillo 2.01 (gui)"),              _T ("201k542k") },
{ ENTRY (EXT_PE_063), PE_EXE, ENCRYPTER, _T ("Armadillo 2.10 - 2.20 (console)"),   _T ("175k548k") },
{ ENTRY (EXT_PE_064), PE_EXE, ENCRYPTER, _T ("Armadillo 2.10 - 2.20 (gui)"),       _T ("201k546k") },
{ ENTRY (EXT_PE_065), PE_EXE, ENCRYPTER, _T ("Armadillo 2.50b1a (gui)"),           _T ("201k551k") },
{ ENTRY (EXT_PE_066), PE_EXE, ENCRYPTER, _T ("Armadillo 2.50b3 (console)"),        _T ("175k546k") },
{ ENTRY (EXT_PE_067), PE_EXE, ENCRYPTER, _T ("Armadillo 2.50b3 (gui)"),            _T ("201k562k") },
{ ENTRY (EXT_PE_068), PE_EXE, ENCRYPTER, _T ("Armadillo 2.50 (console)"),          _T ("175k546k") },
{ ENTRY (EXT_PE_069), PE_EXE, ENCRYPTER, _T ("Armadillo 2.50 (gui)"),              _T ("201k562k") },
{ ENTRY (EXT_PE_070), PE_EXE, ENCRYPTER, _T ("Armadillo 2.51 (console)"),          _T ("175k549k") },
{ ENTRY (EXT_PE_071), PE_EXE, ENCRYPTER, _T ("Armadillo 2.51 (gui)"),              _T ("201k565k") },
{ ENTRY (EXT_PE_055), PE_EXE, ENCRYPTER, _T ("Armadillo 2.51 (DLL)"),              _T ("75k") },
{ ENTRY (EXT_PE_072), PE_EXE, ENCRYPTER, _T ("Armadillo 2.52b2 (console)"),        _T ("175k562k") },
{ ENTRY (EXT_PE_073), PE_EXE, ENCRYPTER, _T ("Armadillo 2.52b2 (gui)"),            _T ("201k565k") },
{ ENTRY (EXT_PE_074), PE_EXE, ENCRYPTER, _T ("Armadillo 2.52 (console)"),          _T ("175k562k") },
{ ENTRY (EXT_PE_075), PE_EXE, ENCRYPTER, _T ("Armadillo 2.52 (gui)"),              _T ("201k565k") },
{ ENTRY (EXT_PE_056), PE_EXE, ENCRYPTER, _T ("Armadillo 2.52 (DLL)"),              _T ("75k") },
{ ENTRY (EXT_PE_076), PE_EXE, ENCRYPTER, _T ("Armadillo 3.40 (DEMO)"),             _T ("S.pdata") },
{ ENTRY (EXT_PE_077), PE_EXE, ENCRYPTER, _T ("Armadillo 3.50b1 (DEMO)"),           _T ("S.pdata") },
{ ENTRY (EXT_PE_078), PE_EXE, ENCRYPTER, _T ("Armadillo 3.50a (DEMO)"),            _T ("S.pdata") },
{ ENTRY (EXT_PE_010), PE_EXE, PACKER,    _T ("ASPack 1.04b"),                      _T ("2r") },
{ ENTRY (EXT_PE_011), PE_EXE, PACKER,    _T ("ASPack 1.05b"),                      _T ("2r") },
// the following three have all the same code but different locations!!
{ ENTRY (EXT_PE_012), PE_EXE, PACKER,    _T ("ASPack 1.061b"),                     _T ("3r") },
{ ENTRY (EXT_PE_012), PE_EXE, PACKER,    _T ("ASPack 1.061b"),                     _T ("4r") },
{ ENTRY (EXT_PE_012), PE_EXE, PACKER,    _T ("ASPack 1.061b"),                     _T ("5r") },
// the following three have all the same code but different locations!!
{ ENTRY (EXT_PE_013), PE_EXE, PACKER,    _T ("ASPack 1.07b"),                      _T ("3r") },
{ ENTRY (EXT_PE_013), PE_EXE, PACKER,    _T ("ASPack 1.07b"),                      _T ("4r") },
{ ENTRY (EXT_PE_013), PE_EXE, PACKER,    _T ("ASPack 1.07b"),                      _T ("5r") },
// the following three have all the same code but different locations!!
{ ENTRY (EXT_PE_014), PE_EXE, PACKER,    _T ("ASPack 1.08"),                       _T ("4r") },
{ ENTRY (EXT_PE_014), PE_EXE, PACKER,    _T ("ASPack 1.08"),                       _T ("5r") },
{ ENTRY (EXT_PE_014), PE_EXE, PACKER,    _T ("ASPack 1.08"),                       _T ("6r") },
// the following three have all the same code but different locations!!
{ ENTRY (EXT_PE_015), PE_EXE, PACKER,    _T ("ASPack 1.081"),                      _T ("4r") },
{ ENTRY (EXT_PE_015), PE_EXE, PACKER,    _T ("ASPack 1.081"),                      _T ("5r") },
{ ENTRY (EXT_PE_015), PE_EXE, PACKER,    _T ("ASPack 1.081"),                      _T ("6r") },
// the following three have all the same code but different locations!!
{ ENTRY (EXT_PE_016), PE_EXE, PACKER,    _T ("ASPack 1.082"),                      _T ("4r") },
{ ENTRY (EXT_PE_016), PE_EXE, PACKER,    _T ("ASPack 1.082"),                      _T ("5r") },
{ ENTRY (EXT_PE_016), PE_EXE, PACKER,    _T ("ASPack 1.082"),                      _T ("6r") },
{ ENTRY (EXT_PE_017), PE_EXE, PACKER,    _T ("ASPack 1.084"),                      _T ("1k") },
{ ENTRY (EXT_PE_021), PE_EXE, PACKER,    _T ("ASPack 2.000"),                      _T ("1k") },
{ ENTRY (EXT_PE_022), PE_EXE, PACKER,    _T ("ASPack 2.001"),                      _T ("1k") },
{ ENTRY (EXT_PE_023), PE_EXE, PACKER,    _T ("ASPack 2.100"),                      _T ("1k") },
{ ENTRY (EXT_PE_084), PE_EXE, PACKER,    _T ("ASPack 2.12"),                       _T ("1k") },
{ ENTRY (EXT_PE_087), PE_EXE, ENCRYPTER, _T ("ASProtect 1.23 RC1"),                _T ("A3") },
{ ENTRY (EXT_PE_088), PE_EXE, ENCRYPTER, _T ("ASProtect 1.23 - 1.31 b0427"),       _T ("A3") },
{ ENTRY (EXT_PE_089), PE_EXE, ENCRYPTER, _T ("Bart's encrypter [noname]"),         _T ("A4") },
{ ENTRY (EXT_PE_009), PE_EXE, COMPILER,  _T ("Borland Delphi 4"),                  _T ("11k") },
{ ENTRY (EXT_PE_027), PE_EXE, ENCRYPTER, _T ("CodeCrypt 0.14b"),                   _T ("r") },
{ ENTRY (EXT_PE_026), PE_EXE, ENCRYPTER, _T ("CodeCrypt 0.15b"),                   _T ("r") },
{ ENTRY (EXT_PE_024), PE_EXE, ENCRYPTER, _T ("CodeCrypt 0.16b - 0.161b"),          _T ("r") },
{ ENTRY (EXT_PE_025), PE_EXE, ENCRYPTER, _T ("CodeCrypt 0.163b"),                  _T ("r") },
{ ENTRY (EXT_PE_029), PE_EXE, ENCRYPTER, _T ("CodeCrypt 0.164b"),                  _T ("r") },
{ ENTRY (EXT_PE_085), PE_EXE, PROTECTOR, _T ("ExeShield 2.7a"),                    _T ("2350k") },
{ ENTRY (EXT_PE_086), PE_EXE, PROTECTOR, _T ("ExeShield 2.7b"),                    _T ("2350k") },
// there code differs from offset ~200 (check 1.3 before 1.2!!)
{ ENTRY (EXT_PE_079), PE_EXE, PACKER,    _T ("FSG 1.1"),                           _T ("436") },
{ ENTRY (EXT_PE_080), PE_EXE, PACKER,    _T ("FSG 1.2"),                           _T ("436") },
//{ ENTRY (EXT_PE_081), PE_EXE, PACKER,    _T ("FSG 1.3"),                           _T ("200") },
{ ENTRY (EXT_PE_018), PE_EXE, PACKER,    _T ("Harlequin Dylan 1.2"),               _T ("10r") },
{ ENTRY (EXT_PE_001), PE_EXE, PACKER,    _T ("NeoLite 1.0 - 1.01"),                _T ("r") },
{ ENTRY (EXT_PE_003), PE_EXE, PACKER,    _T ("NeoLite 1.04"),                      _T ("r") },
{ ENTRY (EXT_PE_004), PE_EXE, PACKER,    _T ("NeoLite 2.00"),                      _T ("r") },
{ ENTRY (EXT_PE_054), PE_EXE, PROTECTOR, _T ("PELock 1.06"),                       _T ("-92") },
{ ENTRY (EXT_PE_090), PE_EXE, PROTECTOR, _T ("Perplex PE-Protector 1.01"),         _T ("1r") },
{ ENTRY (EXT_PE_031), PE_EXE, PACKER,    _T ("PeX 0.99"),                          _T ("r") },
{ ENTRY (EXT_PE_002), PE_EXE, PROTECTOR, _T ("PE-Prot 0.9"),                       _T ("r") },
// the following two have all the same code but different locations!!
{ ENTRY (EXT_PE_019), PE_EXE, PACKER,    _T ("PKLite32 1.1"),                      _T ("15k") },
{ ENTRY (EXT_PE_019), PE_EXE, PACKER,    _T ("PKLite32 1.1"),                      _T ("20k") },
{ ENTRY (EXT_PE_047), PE_EXE, ENCRYPTER, _T ("tELock 0.92a [PE DLL]"),             _T ("r") },
{ ENTRY (EXT_PE_046), PE_EXE, ENCRYPTER, _T ("tELock 0.92a [PE EXE]"),             _T ("r") },
{ ENTRY (EXT_PE_049), PE_EXE, ENCRYPTER, _T ("tELock 0.95 [PE DLL]"),              _T ("r") },
{ ENTRY (EXT_PE_048), PE_EXE, ENCRYPTER, _T ("tELock 0.95 [PE EXE]"),              _T ("r") },
{ ENTRY (EXT_PE_051), PE_EXE, ENCRYPTER, _T ("tELock 0.96 [PE DLL]"),              _T ("r") },
{ ENTRY (EXT_PE_050), PE_EXE, ENCRYPTER, _T ("tELock 0.96 [PE EXE]"),              _T ("r") },
{ ENTRY (EXT_PE_053), PE_EXE, ENCRYPTER, _T ("tELock 0.98 [PE DLL]"),              _T ("r") },
{ ENTRY (EXT_PE_052), PE_EXE, ENCRYPTER, _T ("tELock 0.98 [PE EXE]"),              _T ("r") },
{ ENTRY (EXT_PE_091), PE_EXE, ENCRYPTER, _T ("tELock 0.98 [2]"),                   _T ("r") },
{ ENTRY (EXT_PE_020), PE_EXE, PROTECTOR, _T ("VGCrypt 0.75"),                      _T ("29r") },
{ ENTRY (EXT_PE_030), PE_EXE, COMPILER,  _T ("Virtual Pascal 2.1"),                _T ("10k") },
{ ENTRY (EXT_PE_082), PE_EXE, COMPILER,  _T ("Visual C++ 7.0 / .NET 2002"),        _T ("r") },
{ ENTRY (EXT_PE_106), PE_EXE, COMPILER,  _T ("Visual C++ 2005 (debug; DLL)"),      _T ("9k") },
{ ENTRY (EXT_PE_107), PE_EXE, COMPILER,  _T ("Visual C++ 2005 (debug; EXE)"),      _T ("3k") },
{ ENTRY (EXT_PE_093), PE_EXE, COMPILER,  _T ("Visual C++ 2005 (nodebug; DLL)"),    _T ("7k") },
{ ENTRY (EXT_PE_092), PE_EXE, COMPILER,  _T ("Visual C++ 2005 (nodebug; EXE)"),    _T ("k") },
{ ENTRY (EXT_PE_104), PE_EXE, COMPILER,  _T ("Visual C++ 2008 (debug; DLL)"),      _T ("11k") },
{ ENTRY (EXT_PE_105), PE_EXE, COMPILER,  _T ("Visual C++ 2008 (debug; EXE)"),      _T ("5k") },
{ ENTRY (EXT_PE_095), PE_EXE, COMPILER,  _T ("Visual C++ 2008 (nodebug; DLL)"),    _T ("11k") },
{ ENTRY (EXT_PE_094), PE_EXE, COMPILER,  _T ("Visual C++ 2008 (nodebug; EXE)"),    _T ("k") },
{ ENTRY (EXT_PE_099), PE_EXE, COMPILER,  _T ("Visual C++ 2010 (debug; DLL)"),      _T ("28k") },
{ ENTRY (EXT_PE_103), PE_EXE, COMPILER,  _T ("Visual C++ 2010 (debug; EXE)"),      _T ("5k") },
{ ENTRY (EXT_PE_100), PE_EXE, COMPILER,  _T ("Visual C++ 2010 (nodebug; DLL)"),    _T ("11k") },
{ ENTRY (EXT_PE_102), PE_EXE, COMPILER,  _T ("Visual C++ 2010 (nodebug; EXE)"),    _T ("k") },
{ ENTRY (EXT_PE_098), PE_EXE, COMPILER,  _T ("Visual C++ 2012 (debug; DLL)"),      _T ("9k") },
{ ENTRY (EXT_PE_101), PE_EXE, COMPILER,  _T ("Visual C++ 2012 (debug; EXE)"),      _T ("3k") },
{ ENTRY (EXT_PE_097), PE_EXE, COMPILER,  _T ("Visual C++ 2012 (nodebug; DLL)"),    _T ("9k") },
{ ENTRY (EXT_PE_096), PE_EXE, COMPILER,  _T ("Visual C++ 2012 (nodebug; EXE)"),    _T ("k") },
{ ENTRY (EXT_PE_028), PE_EXE, COMPILER,  _T ("WATCOM C/C++ runtime system 1995"),  _T ("r") },
{ ENTRY (EXT_PE_005), PE_EXE, PACKER,    _T ("WWPack32 1.0"),                      _T ("6jj") },
{ ENTRY (EXT_PE_006), PE_EXE, PACKER,    _T ("WWPack32 1.09"),                     _T ("6jk") },
{ ENTRY (EXT_PE_007), PE_EXE, PACKER,    _T ("WWPack32 1.10 - 1.11"),              _T ("6j") },
{ ENTRY (EXT_PE_008), PE_EXE, PACKER,    _T ("WWPack32 1.12 - 1.20"),              _T ("6jj") }
};
